{
    "visual_design_arr": [
        {
            "type": "装饰3",
            "content": "<template>\n  <div>   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n\n  </div>    \n</template> "
        },
        {
            "type": "装饰1",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n\n  </div>    \n</template> \n<script>\n  \n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>"
        },
        {
            "type": "装饰2",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>\n"
        },
        {
            "type": "装饰4",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色1\">\n      <avue-input-color v-model=\"edit_item.option.color1\"/>\n    </el-form-item>\n    <el-form-item label=\"名称颜色2\">\n      <avue-input-color v-model=\"edit_item.option.color2\"/>\n    </el-form-item>\n    <el-form-item label=\"单次动画时长(秒)\">\n      <avue-input-number v-model=\"edit_item.option.dur\"/>\n    </el-form-item>\n\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>"
        },
        {
            "type": "装饰5",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>\n\n"
        },
        {
            "type": "装饰6",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>\n\n"
        },
        {
            "type": "装饰7",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n\t <el-form-item label=\"文字\">\n      <template slot=\"label\">\n        <el-tooltip placement=\"top\">\n          <div slot=\"content\"><div v-html=\"context.templateGuide\"/></div>\n          <el-button style=\"color: darkred;\">文字<span class=\"guide\">\n         <i class=\"el-icon-warning-outline\" title=\"查看文档\"></i>\n        </span></el-button>\n        </el-tooltip>        \n      </template>    \n      <avue-input v-model=\"edit_item.option.text\">\n      </avue-input> \n    </el-form-item>\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>\n"
        },
        {
            "type": "装饰8",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>"
        },
        {
            "type": "装饰9",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"文字\">\n      <template slot=\"label\">\n        <el-tooltip placement=\"top\">\n          <div slot=\"content\"><div v-html=\"context.templateGuide\"/></div>\n          <el-button style=\"color: darkred;\">文字<span class=\"guide\">\n         <i class=\"el-icon-warning-outline\" title=\"查看文档\"></i>\n        </span></el-button>\n        </el-tooltip>        \n      </template>      \n      <avue-input v-model=\"edit_item.option.text\">\n      </avue-input> \n    </el-form-item>\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>\n"
        },
        {
            "type": "装饰10",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>\n"
        },
        {
            "type": "装饰11",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"文字\">\n      <template slot=\"label\">\n        <el-tooltip placement=\"top\">\n          <div slot=\"content\"><div v-html=\"context.templateGuide\"/></div>\n          <el-button  style=\"color: darkred;\">文字<span class=\"guide\">\n         <i class=\"el-icon-warning-outline\" title=\"查看文档\"></i>\n        </span></el-button>\n        </el-tooltip>        \n      </template>       \n      <avue-input v-model=\"edit_item.option.text\">\n      </avue-input> \n    </el-form-item>\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>\n"
        },
        {
            "type": "装饰12",
            "content": "<template>\n  <div v-if=\"hasOption\">   \n\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>\n\n"
        },
        {
            "type": "胶囊柱图",
            "helpurl": [
                "http://datav.jiaminghi.com/guide/capsuleChart.html"
            ],
            "content": "<template>\n  <div v-if=\"hasOption\">\n    <el-form-item label=\"数值单位\">\n      <avue-input v-model=\"edit_item.option.unit\"></avue-input>\n    </el-form-item>\n\n    <el-form-item label=\"显示数值\">\n      <avue-switch v-model=\"edit_item.option.showValue\"></avue-switch>\n    </el-form-item>\n    <el-form-item label=\"文字颜色\">\n      <avue-input-color v-model=\"edit_item.option.color\"/>\n    </el-form-item>\n\n    <avue-crud\n          :option=\"colorOption\"\n          :data=\"edit_item.option.barColor\"\n          @row-save=\"rowSave\"\n          @row-del=\"rowDel\"\n          style=\"width: 300px\"\n          @row-update=\"rowUpdate\"\n    ></avue-crud>\n  </div>\n</template>\n\n<script>\n              \n  export default {\n\t  data:{\n       colorOption : {\n  menuWidth: 150,\n  refreshBtn: false,\n  columnBtn: false,\n  labelWidth: 100,\n  column: [{\n    label: '柱颜色',\n    prop: 'color1',\n    type: 'color',\n  }]\n} \n      },\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={barColor:[]}\n        return true\n      }\n    },\n   methods:{\n      rowSave(row, done) {\n        this.edit_item.option.barColor.push(row);\n        done();\n      },\n      rowDel(row, index) {\n        this.edit_item.option.barColor.splice(index, 1);\n      },\n      rowUpdate(row, index, done) {\n        this.edit_item.option.barColor.splice(index, 1, row);\n        done();\n      },\n    }\n  }\n</script>"
        },
        {
            "type": "dv_scroll_board",
            "helpurl": [
                "http://datav.jiaminghi.com/guide/scrollBoard.html"
            ],
            "content": "<template>\n  <div v-if=\"hasOption\">\n    <el-form-item label=\"表行数\">\n      <avue-input-number v-model=\"edit_item.option.rowNum\"></avue-input-number>\n    </el-form-item>\n    <el-form-item label=\"轮播时间间隔\">\n      <avue-input-number v-model=\"edit_item.option.waitTime\" :step=\"200\"></avue-input-number>\n    </el-form-item>\n    <el-form-item label=\"轮播方式\">\n      <avue-select v-model=\"edit_item.option.carousel\"\n                   :dic=\"[{label:'single',value:'single'},{label:'page',value:'page'}]\">\n      </avue-select>\n    </el-form-item>    \n    <el-form-item label=\"数值单位\">\n      <avue-input v-model=\"edit_item.option.unit\"></avue-input>\n    </el-form-item>\n    <el-form-item label=\"自动排序\">\n      <avue-switch v-model=\"edit_item.option.sort\"></avue-switch>\n    </el-form-item>\n\n    <el-form-item label=\"表头背景色\">\n      <avue-input-color v-model=\"edit_item.option.headerBGC\">\n      </avue-input-color>\n    </el-form-item>\n    <el-form-item label=\"奇数行背景色\">\n      <avue-input-color v-model=\"edit_item.option.oddRowBGC\">\n      </avue-input-color>\n    </el-form-item>\n    <el-form-item label=\"偶数行背景色\">\n      <avue-input-color v-model=\"edit_item.option.evenRowBGC\">\n      </avue-input-color>\n    </el-form-item>\n\n    <el-form-item label=\"表头高度\">\n      <avue-input-number v-model=\"edit_item.option.headerHeight\"></avue-input-number>\n    </el-form-item>\n    <el-form-item label=\"显示行号\">\n      <avue-switch v-model=\"edit_item.option.index\"></avue-switch>\n    </el-form-item>\n    <el-form-item label=\"行号表头\">\n      <avue-input v-model=\"edit_item.option.indexHeader\"></avue-input>\n    </el-form-item>\n    <el-form-item label=\"悬浮暂停轮播\">\n      <avue-switch v-model=\"edit_item.option.hoverPause\"></avue-switch>\n    </el-form-item>\n\n\n  </div>\n</template>\n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>"
        },
        {
            "type": "dv_scroll_ranking_board",
            "helpurl": [
                "http://datav.jiaminghi.com/guide/scrollRankingBoard.html"
            ],
            "content": "<template>\n  <div v-if=\"hasOption\">\n    <el-form-item label=\"表行数\">\n      <avue-input-number v-model=\"edit_item.option.rowNum\"></avue-input-number>\n    </el-form-item>\n    <el-form-item label=\"轮播时间间隔\">\n      <avue-input-number v-model=\"edit_item.option.waitTime\" :step=\"200\"></avue-input-number>\n    </el-form-item>\n    <el-form-item label=\"轮播方式\">\n      <avue-select v-model=\"edit_item.option.carousel\"\n                   :dic=\"[{label:'single',value:'single'},{label:'page',value:'page'}]\">\n      </avue-select>\n    </el-form-item>\n    <el-form-item label=\"数值单位\">\n      <avue-input v-model=\"edit_item.option.unit\"></avue-input>\n    </el-form-item>\n    <el-form-item label=\"自动排序\">\n      <avue-switch v-model=\"edit_item.option.sort\"></avue-switch>      \n    </el-form-item>\n \n  </div>\n</template>\n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n  }\n</script>"
        },
        {
            "type": "水位图",
            "content": "<template>\n  <div v-if=\"hasOption\">  \n    <el-form-item label=\"值\">\n      <template slot=\"label\">\n        <el-tooltip placement=\"top\">\n          <div slot=\"content\"><div v-html=\"context.templateGuide\"/></div>\n          <el-button style=\"color: darkred;\">值<span class=\"guide\">\n         <i class=\"el-icon-warning-outline\" title=\"查看文档\"></i>\n        </span></el-button>\n        </el-tooltip>        \n      </template>       \n      <avue-input v-model=\"edit_item.option.value\">\n      </avue-input> \n    </el-form-item>\n    <el-form-item label=\"形状\">\n      <avue-select v-model=\"edit_item.option.shape\" \n      :dic=\"[{ label: '矩形', value: 'rect' }, { label: '圆角矩形', value: 'roundRect' }, { label: '圆形', value: 'round' }]\">\n      </avue-select> \n    </el-form-item>\n    <el-form-item label=\"波浪数量\">\n      <avue-input-number v-model=\"edit_item.option.waveNum\">\n      </avue-input-number> \n    </el-form-item>\n    <el-form-item label=\"波浪高度\">\n      <avue-input-number v-model=\"edit_item.option.waveHeight\">\n      </avue-input-number> \n    </el-form-item>\n  \n\t\t<el-form-item label=\"波浪透明度\">\n          <avue-slider\n                v-model=\"edit_item.option.waveOpacity\"\n                :max=\"1\"\n                :step=\"0.1\"\n              ></avue-slider>\n    </el-form-item>\n\n    <el-form-item label=\"信息格式化\">\n      <avue-input v-model=\"edit_item.option.formatter\">\n      </avue-input> \n    </el-form-item>\n\n    <el-form-item label=\"颜色1\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"颜色2\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n\n\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={barColor:[],shape:'rect',waveOpacity:0.4,waveHeight:40,waveNum:3,formatter:'{value}%'}\n        return true\n      }\n    },\n   methods:{\n      rowSave(row, done) {\n        this.edit_item.option.barColor.push(row);\n        done();\n      },\n      rowDel(row, index) {\n        this.edit_item.option.barColor.splice(index, 1);\n      },\n      rowUpdate(row, index, done) {\n        this.edit_item.option.barColor.splice(index, 1, row);\n        done();\n      },\n    }\n  }\n</script>\n",
            "helpurl": [
                "http://datav.jiaminghi.com/guide/waterLevelPond.html"
            ]
        },
        {
            "type": "进度池",
            "content": "<template>\n  <div v-if=\"hasOption\"> \n    <el-form-item label=\"值\">\n      <template slot=\"label\">\n        <el-tooltip placement=\"top\">\n          <div slot=\"content\"><div v-html=\"context.templateGuide\"/></div>\n          <el-button style=\"color: darkred;\">值<span class=\"guide\">\n         <i class=\"el-icon-warning-outline\" title=\"查看文档\"></i>\n        </span></el-button>\n        </el-tooltip>        \n      </template> \n      <avue-input v-model=\"edit_item.option.value\">\n      </avue-input> \n    </el-form-item>\n    <el-form-item label=\"边框宽度\">\n      <avue-input-number v-model=\"edit_item.option.borderWidth\"/> \n    </el-form-item>\n    <el-form-item label=\"边框间隙\">\n      <avue-input-number v-model=\"edit_item.option.borderGap\"/> \n    </el-form-item>\n\n    <el-form-item label=\"线条间隙1\">\n      <avue-input-number v-model=\"edit_item.option.lineDash1\"/> \n    </el-form-item>\n    <el-form-item label=\"线条间隙2\">\n      <avue-input-number v-model=\"edit_item.option.lineDash2\"/>      \n    </el-form-item>\n    <el-form-item label=\"边框半径\">\n      <avue-input-number v-model=\"edit_item.option.borderRadius\"/>      \n    </el-form-item>\n    <el-form-item label=\"局部渐变\">\n      <avue-switch v-model=\"edit_item.option.localGradient\"/>\n    </el-form-item>\n\n    <el-form-item label=\"文字颜色\">\n      <avue-input-color v-model=\"edit_item.option.textColor\"/> \n    </el-form-item>\n\n    <el-form-item label=\"信息格式化\">\n      <avue-input v-model=\"edit_item.option.formatter\">\n      </avue-input> \n    </el-form-item>\n\n    <el-form-item label=\"进度池配色1\">\n      <avue-input-color v-model=\"edit_item.option.color1\">\n      </avue-input-color> \n    </el-form-item>\n    <el-form-item label=\"进度池配色2\">\n      <avue-input-color v-model=\"edit_item.option.color2\">\n      </avue-input-color> \n    </el-form-item>\n\n\n  </div>    \n</template> \n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={borderWidth:3,borderGap:3,lineDash1:5,lineDash2:1,\n                         textColor:'#fff',borderRadius:5,localGradient:false,formatter:'{value}%'}\n        return true\n      }\n    },\n   methods:{\n      rowSave(row, done) {\n        this.edit_item.option.barColor.push(row);\n        done();\n      },\n      rowDel(row, index) {\n        this.edit_item.option.barColor.splice(index, 1);\n      },\n      rowUpdate(row, index, done) {\n        this.edit_item.option.barColor.splice(index, 1, row);\n        done();\n      },\n    }\n  }\n</script>\n",
            "helpurl": [
                "http://datav.jiaminghi.com/guide/percentPond.html"
            ]
        },
        {
            "type": "锥形柱图",
            "content": "\n<template>\n  <div v-if=\"hasOption\">\n    <el-form-item label=\"文字大小\"><avue-input-number v-model=\"edit_item.option.fontSize\"/></el-form-item>\n    <el-form-item label=\"图片边长\"><avue-input-number v-model=\"edit_item.option.imgSideLength\"/></el-form-item>\n    <el-form-item label=\"柱颜色\"><avue-input-color v-model=\"edit_item.option.columnColor\"/></el-form-item>\n\t\t<el-form-item label=\"文字颜色\"><avue-input-color v-model=\"edit_item.option.textColor\"/></el-form-item>\n    <el-form-item label=\"显示数值\"><avue-switch v-model=\"edit_item.option.showValue\"/></el-form-item>\n<el-form-item label=\"柱顶图片\"><avue-array type=\"img\" v-model=\"edit_item.option.img\" placeholder=\"请输入内容\" ></avue-array></el-form-item>\n\n    \n  </div>\n</template>\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={img:[]}\n        return true\n      }\n    },\n   methods:{\n    }\n  }\n</script>",
            "helpurl": [
                "http://datav.jiaminghi.com/guide/conicalColumnChart.html"
            ]
        },
        {
            "type": "动态环图",
            "content": "<template>\n  <div v-if=\"hasOption\">\n    <el-form-item label=\"环半径\"><avue-select :dic=\"[{label:'50%',value:'50%'},{label:'100',value:100}]\" v-model=\"edit_item.option.radius\"/></el-form-item>\n    <el-form-item label=\"环半径（动态）\"><avue-select :dic=\"[{label:'50%',value:'50%'},{label:'100',value:100}]\" v-model=\"edit_item.option.activeRadius\"/></el-form-item>\n    <el-form-item label=\"数字翻牌器单位\"><avue-input v-model=\"edit_item.option.digitalFlopUnit\"/></el-form-item>\n    <el-form-item label=\"环线条宽度\"><avue-input v-model=\"edit_item.option.lineWidth\"/></el-form-item>\n    <el-form-item label=\"切换间隔\"><avue-input-number v-model=\"edit_item.option.activeTimeGap\"/></el-form-item>\n     <el-form-item label=\"字体大小\"><avue-input-number v-model=\"edit_item.option.style_fontSize\"/></el-form-item>\n    <el-form-item label=\"字体描边颜色\"><avue-input-color v-model=\"edit_item.option.style_fill\"/></el-form-item>\n\n    <el-form-item label=\"数字翻牌器小数位数\"><avue-input-number v-model=\"edit_item.option.digitalFlopToFixed\"/></el-form-item>\n\n    <el-form-item label=\"动效帧数\"><avue-input-number v-model=\"edit_item.option.animationFrame\"/></el-form-item>\n    <el-form-item label=\"显示原始值\"><avue-switch v-model=\"edit_item.option.showOriginValue\"/></el-form-item>\n \n<avue-crud\n:option=\"colorOption\"\n:data=\"edit_item.option.barColor\"\n@row-save=\"rowSave\"\n@row-del=\"rowDel\"\nstyle=\"width: 300px\"\n@row-update=\"rowUpdate\"\n></avue-crud>\n  </div> \n</template>\n<script>  \n  export default {\n\t  data:{\n       colorOption : {\n  menuWidth: 150,\n  refreshBtn: false,\n  columnBtn: false,\n  labelWidth: 100,\n  column: [{\n    label: '环颜色',\n    prop: 'color1',\n    type: 'color',\n  }]\n} \n      },\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={barColor:[],\n                style_fontSize: 25\n                ,style_fill:'#fff'\n                ,radius:'50%'\n                ,activeRadius:'55%'\n                ,lineWidth:20\n                ,activeTimeGap:3000\n                ,digitalFlopToFixed:0\n                ,digitalFlopUnit:''\n                ,animationFrame:50\n                ,showOriginValue:false}\n        return true\n      }\n    },\n   methods:{\n      rowSave(row, done) {\n        this.edit_item.option.barColor.push(row);\n        done();\n      },\n      rowDel(row, index) {\n        this.edit_item.option.barColor.splice(index, 1);\n      },\n      rowUpdate(row, index, done) {\n        this.edit_item.option.barColor.splice(index, 1, row);\n        done();\n      },\n    }\n  }\n</script>  ",
            "helpurl": [
                "http://datav.jiaminghi.com/guide/activeRingChart.html"
            ]
        },
        {
            "type": "datav数字翻牌器",
            "content": "<template>\n  <div v-if=\"hasOption\">\n    <el-form-item label=\"值\">\n      <template slot=\"label\">\n        <el-tooltip placement=\"top\">\n          <div slot=\"content\"><div v-html=\"context.templateGuide\"/></div>\n          <el-button style=\"color: darkred;\">值<span class=\"guide\">\n         <i class=\"el-icon-warning-outline\" title=\"查看文档\"></i>\n        </span></el-button>\n        </el-tooltip>        \n      </template>           \n      <avue-input v-model=\"edit_item.option.value\">\n      </avue-input> \n    </el-form-item>\n\n    <el-form-item label=\"内容模版\"><avue-input v-model=\"edit_item.option.content\"/></el-form-item>\n    <el-form-item label=\"小数位数\"><avue-input-number v-model=\"edit_item.option.toFixed\"/></el-form-item>\n    <el-form-item label=\"水平对齐方式\">\n      <avue-select v-model=\"edit_item.option.textAlign\"\n                   :dic=\"[{label:'居中对齐',value:'center'},{label:'左对齐',value:'left'},{label:'右对齐',value:'right'}]\">\n      </avue-select>\n      </el-form-item>\n    <el-form-item label=\"行间距\"><avue-input-number v-model=\"edit_item.option.rowGap\"/></el-form-item>\n     <el-form-item label=\"字体大小\"><avue-input-number v-model=\"edit_item.option.style.fontSize\"/></el-form-item>\n    <el-form-item label=\"字体描边颜色\"><avue-input-color v-model=\"edit_item.option.style.fill\"/></el-form-item>\n    <el-form-item label=\"格式化数字\"><avue-input v-model=\"edit_item.option.formatter\"/></el-form-item>\n    <el-form-item label=\"动效曲线\">\n      <avue-select v-model=\"edit_item.option.animationCurve\"\n                   :dic=\"dic\">\n      </avue-select>\n\t\t\t\n      </el-form-item>\n    <el-form-item label=\"动效帧数\"><avue-input-number v-model=\"edit_item.option.animationFrame\"/></el-form-item>\n  </div>\n</template>\n\n<script>\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={\n              number:\t[]\n              ,content\t:'{nt}个'\n              ,toFixed\t:0\n              ,textAlign:'center'\n              ,rowGap:\t0,style: {\n                fontSize: 30,\n                fill: '#3de7c9'\n              }\n              ,animationCurve:'easeOutCubic'\n              ,animationFrame:50\n          }\n        return true\n      },\n        dic(){\n        return [{\"label\":\"linear\",\"value\":\"linear\"},{\"label\":\"easeInSine\",\"value\":\"easeInSine\"},{\"label\":\"easeOutSine\",\"value\":\"easeOutSine\"},{\"label\":\"easeInOutSine\",\"value\":\"easeInOutSine\"},{\"label\":\"easeInQuad\",\"value\":\"easeInQuad\"},{\"label\":\"easeOutQuad\",\"value\":\"easeOutQuad\"},{\"label\":\"easeInOutQuad\",\"value\":\"easeInOutQuad\"},{\"label\":\"easeInCubic\",\"value\":\"easeInCubic\"},{\"label\":\"easeOutCubic\",\"value\":\"easeOutCubic\"},{\"label\":\"easeInOutCubic\",\"value\":\"easeInOutCubic\"},{\"label\":\"easeInQuart\",\"value\":\"easeInQuart\"},{\"label\":\"easeOutQuart\",\"value\":\"easeOutQuart\"},{\"label\":\"easeInOutQuart\",\"value\":\"easeInOutQuart\"},{\"label\":\"easeInQuint\",\"value\":\"easeInQuint\"},{\"label\":\"easeOutQuint\",\"value\":\"easeOutQuint\"},{\"label\":\"easeInOutQuint\",\"value\":\"easeInOutQuint\"},{\"label\":\"easeInBack\",\"value\":\"easeInBack\"},{\"label\":\"easeOutBack\",\"value\":\"easeOutBack\"},{\"label\":\"easeInOutBack\",\"value\":\"easeInOutBack\"},{\"label\":\"easeInElastic\",\"value\":\"easeInElastic\"},{\"label\":\"easeOutElastic\",\"value\":\"easeOutElastic\"},{\"label\":\"easeInOutElastic\",\"value\":\"easeInOutElastic\"},{\"label\":\"easeInBounce\",\"value\":\"easeInBounce\"},{\"label\":\"easeOutBounce\",\"value\":\"easeOutBounce\"},{\"label\":\"easeInOutBounce\",\"value\":\"easeInOutBounce\"}]  \n        }\n    },\n   methods:{\n      rowSave(row, done) {\n        this.edit_item.option.barColor.push(row);\n        done();\n      },\n      rowDel(row, index) {\n        this.edit_item.option.barColor.splice(index, 1);\n      },\n      rowUpdate(row, index, done) {\n        this.edit_item.option.barColor.splice(index, 1, row);\n        done();\n      },\n    }\n  }\n</script>\n",
            "helpurl": [
                "http://datav.jiaminghi.com/guide/digitalFlop.html"
            ]
        },
        {
            "type": "bar",
            "content": "<!-- 柱状图配置 -->\n<template>\n  <div v-if=\"hasOption\">\n    <el-collapse accordion>\n      <el-collapse-item title=\"柱体设置\">\n        <el-form-item label=\"竖展示\">\n          <avue-switch type=\"textarea\"\n                      v-model=\"edit_item.option.category\"></avue-switch>\n        </el-form-item>\n        <el-form-item label=\"堆叠\">\n          <avue-switch type=\"textarea\"\n                      v-model=\"edit_item.option.stack\"></avue-switch>\n        </el-form-item>\n        <el-form-item label=\"最大宽度\">\n          <avue-slider v-model=\"edit_item.option.barWidth\">\n          </avue-slider>\n        </el-form-item>\n        <el-form-item label=\"圆角\">\n          <avue-slider v-model=\"edit_item.option.barRadius\">\n          </avue-slider>\n        </el-form-item>\n        <el-form-item label=\"最小高度\">\n          <avue-slider v-model=\"edit_item.option.barMinHeight\">\n          </avue-slider>\n        </el-form-item>\n        <el-form-item label=\"描边颜色\">\n          <avue-input-color v-model=\"edit_item.option.borderColor\"></avue-input-color>\n        </el-form-item>\n        <el-form-item label=\"描边宽度\">\n          <avue-slider v-model=\"edit_item.option.borderWidth\" :max=\"10\">\n          </avue-slider>\n        </el-form-item>\n        <el-form-item label=\"描边类型\">\n          <avue-select v-model=\"edit_item.option.borderType\"\n                       :dic=\"borderType\">\n          </avue-select>\n        </el-form-item>\n        <el-form-item label=\"阴影颜色\">\n          <avue-input-color v-model=\"edit_item.option.shadowColor\"></avue-input-color>\n        </el-form-item>\n        <el-form-item label=\"阴影模糊大小\">\n          <avue-slider v-model=\"edit_item.option.shadowBlur\">\n          </avue-slider>\n        </el-form-item>\n        <el-form-item label=\"阴影x偏移\">\n          <avue-slider v-model=\"edit_item.option.shadowOffsetX\" :min=\"-50\" :max=\"50\">\n          </avue-slider>\n        </el-form-item>\n        <el-form-item label=\"阴影y偏移\">\n          <avue-slider v-model=\"edit_item.option.shadowOffsetY\" :min=\"-20\" :max=\"20\">\n          </avue-slider>\n        </el-form-item>\n        <el-form-item label=\"透明度\">\n          <avue-slider v-model=\"edit_item.option.itemStyleOpacity\" :max=\"1\" :step=\"0.05\" >\n          </avue-slider>\n        </el-form-item>\n      </el-collapse-item>\n      <el-collapse-item title=\"标签设置\">\n        <el-form-item label=\"旋转\">\n          <avue-slider v-model=\"edit_item.option.LabelRotate\" :min=\"-90\" :max=\"90\"  :show-input-controls='false' input-size='mini'>\n          </avue-slider>\n        </el-form-item>\n \n        <el-form-item label=\"水平\">\n          <avue-select v-model=\"edit_item.option.LabelAlign\"\n                       :dic=\"[{ label: '居中', value: 'center' }, { label: '左对齐', value: 'left' }, { label: '右对齐', value: 'right' }]\">\n          </avue-select>\n        </el-form-item>\n        <el-form-item label=\"垂直\">\n          <avue-select v-model=\"edit_item.option.LabelVerticalAlign\"\n                       :dic=\"[{ label: '居中', value: 'middle' }, { label: '上对齐', value: 'top' }, { label: '下对齐', value: 'bottom' }]\">\n          </avue-select>\n        </el-form-item>\n        <el-form-item label=\"标签位置\">\n          <avue-select v-model=\"edit_item.option.LabelPosition\"\n                       :dic=\"[\n    {label:'left',value:'left'},\n    {label:'right',value:'right'},\n    {label:'top',value:'top'},\n    {label:'bottom',value:'bottom'},\n    {label:'inside',value:'inside'},\n    {label:'insideTop',value:'insideTop'},\n    {label:'insideLeft',value:'insideLeft'},\n    {label:'insideRight',value:'insideRight'},\n    {label:'insideBottom',value:'insideBottom'},\n    {label:'insideTopLeft',value:'insideTopLeft'},\n    {label:'insideTopRight',value:'insideTopRight'},\n    {label:'insideBottomLeft',value:'insideBottomLeft'},\n    {label:'insideBottomRight',value:'insideBottomRight'},\n  ]\">\n          </avue-select>\n        </el-form-item>\n        <el-form-item label=\"距离\">\n          <avue-slider v-model=\"edit_item.option.LabelDistance\" >\n          </avue-slider>\n        </el-form-item>\n\n      </el-collapse-item>\n    </el-collapse> \n  </div>\n</template>\n\n<script>\n\nexport default {\n  data(){\n    return{\n      borderType:[{ label: '实线', value: 'solid' }, { label: '虚线', value: 'dashed' }, { label: '破折线', value: 'dotted' }],\n    }\n  },computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n}\n</script>\n\n<style>\n</style>"
        },
        {
            "type": "gauge",
            "content": "<!-- 刻度盘配置 -->\n<template>\n  <div>\n    <el-form-item label=\"数据集行*\">\n      <avue-input-number v-model=\"edit_item.option.ds_line\"/>\n    </el-form-item>\n  \n    <el-form-item label=\"最大*\">\n      <avue-input-number v-model=\"edit_item.option.max\"/>\n    </el-form-item>\n  \n    <el-form-item label=\"最小*\">\n      <avue-input-number v-model=\"edit_item.option.min\"/>\n    </el-form-item>\n  \n    <el-form-item label=\"刻度线粗度(像素)\">\n      <avue-input-number v-model=\"edit_item.option.lineSize\"/>\n    </el-form-item>\n    <el-form-item label=\"显示刻度值\">\n      <avue-switch v-model=\"edit_item.option.axisLabelShow\"/>\n    </el-form-item>\n    <el-form-item label=\"刻度值字号\">\n      <avue-input-number v-model=\"edit_item.option.axisLabelFontSize\"></avue-input-number>\n    </el-form-item>\n    <el-form-item label=\"刻度值字体颜色\">\n      <avue-input-color v-model=\"edit_item.option.axisLabelFontColor\"/>\n    </el-form-item>\n    <el-form-item label=\"显示名称\">\n      <avue-switch v-model=\"edit_item.option.nameShow\"/>\n    </el-form-item>\n    <el-form-item label=\"名称字号\">\n      <avue-input-number v-model=\"edit_item.option.nameFontSize\"/>\n    </el-form-item>\n    <el-form-item label=\"名称颜色\">\n      <avue-input-color v-model=\"edit_item.option.nameFontColor\"/>\n    </el-form-item>\n    <el-form-item label=\"指标字号\">\n      <avue-input-number v-model=\"edit_item.option.valueFontSize\"/>\n    </el-form-item>\n    <el-form-item label=\"指标颜色\">\n      <avue-input-color v-model=\"edit_item.option.valueFontColor\"/>\n    </el-form-item>\n  </div>\n</template>\n\n<script>\nexport default {\n  \n}\n</script>\n\n<style>\n</style>"
        },
        {
            "type": "funnel",
            "content": ""
        },
        {
            "type": "pie",
            "content": "<!-- 饼图的配置 -->\n<template>\n  <div>\n    <el-collapse accordion>\n      <el-collapse-item title=\"饼图设置\">\n        <el-form-item label=\"设置为环形\">\n          <avue-switch v-model=\"edit_item.option.radius\"></avue-switch>\n        </el-form-item>\n        <el-form-item label=\"南丁格尔玫瑰\">\n          <avue-switch v-model=\"edit_item.option.roseType\"></avue-switch>\n        </el-form-item>\n        <el-form-item label=\"自动排序\">\n          <avue-switch v-model=\"edit_item.option.sort\"></avue-switch>\n        </el-form-item>\n        <el-form-item label=\"不展示零\">\n          <avue-switch v-model=\"edit_item.option.notCount\"></avue-switch>\n        </el-form-item>\n      </el-collapse-item>\n    </el-collapse>\n  </div>\n</template>\n\n<script>\nexport default {\n  \n}\n</script>\n\n<style>\n</style>"
        },
        {
            "type": "line",
            "content": "<!--折线图配置 -->\n<template>\n  <div style='flex:1'>\n    <el-form-item label=\"竖展示\">\n      <avue-switch type=\"textarea\"\n                   v-model=\"edit_item.option.category\"></avue-switch>\n    </el-form-item>\n    <el-collapse accordion>\n      <el-collapse-item title=\"折线设置\">\n        <el-form-item label=\"平滑曲线\">\n          <avue-switch v-model=\"edit_item.option.smooth\">\n          </avue-switch>\n        </el-form-item>\n        <el-form-item label=\"面积堆积\">\n          <avue-switch v-model=\"edit_item.option.areaStyle\"></avue-switch>\n        </el-form-item>\n        <el-form-item label=\"线条宽度\">\n          <avue-slider v-model=\"edit_item.option.lineWidth\">\n          </avue-slider>\n        </el-form-item>\n        <el-form-item label=\"点的大小\">\n          <avue-slider v-model=\"edit_item.option.symbolSize\">\n          </avue-slider>\n        </el-form-item>\n      </el-collapse-item>\n    </el-collapse>\n  </div>\n</template>\n\n<script>\nexport default {\n  \n}\n</script>\n\n<style>\n</style>"
        },
        {
            "type": "scatter",
            "content": "<!-- 散点图配置 -->\n<template>\n  <div>\n    <el-form-item label=\"字体大小\">\n      <avue-input-number v-model=\"edit_item.option.fontSize\"></avue-input-number>\n    </el-form-item>\n    <el-form-item  label=\"形状\">\n      <avue-select  \n                :dic=\"[\n                  { label: '圆形', value: 'circle' },\n                  { label: '矩形', value: 'rect' },\n                  { label: '圆角矩形', value: 'roundRect' },\n                  { label: '三角形', value: 'triangle' },\n                  { label: '菱形', value: 'diamond' },\n                  { label: '大头针形', value: 'pin' },\n                  { label: '箭头形', value: 'arrow' },\n                ]\"\n                v-model=\"edit_item.option.symbol\"\n                placeholder=\"散点形状\"\n              ></avue-select>\n    </el-form-item>\n  </div>\n</template>\n\n<script>\nexport default {\n \n}\n</script>\n\n<style>\n</style>"
        },
        {
            "type": "map",
            "content": "<!-- 地图配置 -->\n<template>\n  <div>\n    <el-dialog\n      v-draggable\n      style=\"text-align: left\"\n      :inline=\"true\"\n      :visible.sync=\"json_dialogVisible\"\n      :title=\"'编辑geo数据'\"\n      :close-on-click-modal=\"false\"\n      :modal=\"false\"\n      direction=\"btt\"\n      append-to-body\n    >\n      <div>\n        <MonacoEditor\n          v-model=\"geoCoordMap\"\n          style=\"height: 100%\"\n   language=\"json\"       :options=\"{ }\"\n        />\n      </div>\n      <span slot=\"footer\"\n          class=\"dialog-footer\">\n          <el-button size=\"small\"\n                    @click=\"json_dialogVisible=false\">取 消</el-button>\n          <el-button type=\"primary\"\n                    @click=\"json_submit\"\n                    size=\"small\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <el-form-item  label=\"geo数据\"> \n      <el-button @click=\"json_edit\" type=\"primary\">编辑</el-button>\n    </el-form-item>\n    \n    <el-form-item label=\"开启轮播\">\n      <avue-switch v-model=\"edit_item.option.banner\"></avue-switch>\n    </el-form-item>\n    <el-form-item label=\"轮播时间\"  v-if=\"edit_item.option.banner\">\n      <avue-input v-model=\"edit_item.option.bannerTime\"></avue-input>\n    </el-form-item>\n    <el-form-item label=\"序列类型\">\n        <avue-select\n                :dic=\"[\n                  { label: '色阶', value: 'map' },\n                  { label: '散点', value: 'effectScatter' },\n                  { label: '气泡', value: 'airBubble' },\n                ]\"\n                v-model=\"edit_item.option.mapSerieType\"\n                \n                placeholder=\"序列类型\"\n              ></avue-select>\n    </el-form-item>\n    <el-form-item v-if=\"edit_item.option.mapSerieType!='map'\" label=\"形状\">\n      <avue-select\n                :dic=\"[\n                  { label: '圆形', value: 'circle' },\n                  { label: '矩形', value: 'rect' },\n                  { label: '圆角矩形', value: 'roundRect' },\n                  { label: '三角形', value: 'triangle' },\n                  { label: '菱形', value: 'diamond' },\n                  { label: '大头针形', value: 'pin' },\n                  { label: '箭头形', value: 'arrow' },\n                ]\"\n                v-model=\"edit_item.option.symbol\"\n                placeholder=\"散点形状\"\n              ></avue-select>\n    </el-form-item>\n    <el-form-item v-if=\"edit_item.option.mapSerieType!='map'\" label=\"最大气泡\">\n      <avue-input-number v-model=\"edit_item.option.maxSize4Pin\" :step=\"1\"/>\n    </el-form-item>\n\n    <el-form-item v-if=\"edit_item.option.mapSerieType!='map'\" label=\"最小气泡\">\n      <avue-input-number v-model=\"edit_item.option.minSize4Pin\"/>\n    </el-form-item>\n  \n  </div>\n</template>\n \n<script>\n\n\nexport default {\n    data() {\n    return {      \n      json_dialogVisible:false,  \n      geoCoordMap:JSON.stringify(_this.parentCompent.edit_item.geoCoordMap)  \n    };\n  },\n   methods: {\n     json_edit(){\n       this.geoCoordMap=JSON.stringify(this.edit_item.geoCoordMap) \n       this.json_dialogVisible=true\n     },\n    json_submit(){\n      this.edit_item.geoCoordMap=JSON.parse(this.geoCoordMap)\n      this.json_dialogVisible=false\n    },  \n   }\n}\n</script>\n\n<style>\n</style>"
        },
        {
            "type": "测试通用",
            "content": "<!-- 柱状图配置 -->\n<template>\n  <div v-if=\"hasOption\">\n    \n  </div>\n</template>\n\n<script>\n\nexport default {\n  data(){\n    return{\n      \n    }\n  },computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={vaildProp:['titleList']}\n        return true\n      }\n    }\n}\n</script>\n\n<style>\n</style>"
        },
        {
            "type": "通用echart",
            "content": "<!-- 柱状图配置 -->\n<template>\n  <div v-if=\"hasOption\">\n    \n  </div>\n</template>\n\n<script>\n\nexport default {\n  data(){\n    return{\n      \n    }\n  },computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={vaildProp:['titleList']}\n        return true\n      }\n    }\n}\n</script>\n\n<style>\n</style>"
        },
        {
            "type": "香港echart",
            "content": "<!-- 柱状图配置 -->\n<template>\n  <div v-if=\"hasOption\">\n    \n  </div>\n</template>\n\n<script>\n\nexport default {\n  data(){\n    return{\n      \n    }\n  },computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={vaildProp:['titleList']}\n        return true\n      }\n    }\n}\n</script>\n\n<style>\n</style>"
        },
        {
            "type": "radar",
            "content": "<!-- 雷达图配置 -->\n<template>\n  <div>\n    <el-form-item label=\"字体大小\">\n      <avue-input-number v-model=\"edit_item.option.radarNameSize\" :max=\"200\"/>\n    </el-form-item>\n    <el-form-item label=\"字体颜色\">\n      <avue-input-color v-model=\"edit_item.option.radarNameColor\"/>\n    </el-form-item>\n    <el-form-item label=\"区域透明度\">\n      <avue-slider v-model=\"edit_item.option.areaOpacity\" :max=\"1\" :step=\"0.1\"/>\n    </el-form-item>\n    <el-form-item label=\"图形比例\">\n      <avue-slider v-model=\"edit_item.option.radius\" :max=\"100\" :step=\"1\"/>\n    </el-form-item>\n  </div>\n</template>\n\n<script>\nexport default {\n  \n}\n</script>\n"
        },
        {
            "type": "DataProgress",
            "content": "<!-- 文字配置 -->\n<template>\n  <div v-if=\"hasOption\"> \n     <el-form-item label=\"类型\">\n<avue-radio v-model=\"edit_item.option.type\"\n            :dic=\"[{ label: '线条', value: 'line' }, { label: '圆环', value: 'circle' }, { label: '仪表盘', value: 'dashboard' }]\">\n</avue-radio>\n</el-form-item>\n\n\n<el-form-item label=\"值*\">\n<avue-input v-model=\"edit_item.option.value\" ></avue-input>\n</el-form-item>\n<el-form-item label=\"值前文字*\">\n<avue-input v-model=\"edit_item.option.before_value\" ></avue-input>\n</el-form-item>\n<el-form-item label=\"值后文字*\">\n<avue-input v-model=\"edit_item.option.after_value\" ></avue-input>\n</el-form-item>\n\n<el-form-item label=\"字体大小\">\n<avue-input-number v-model=\"edit_item.option.fontSize\"\n                   :max=\"200\"></avue-input-number>\n</el-form-item>\n<el-form-item label=\"字体颜色\">\n<avue-input-color v-model=\"edit_item.option.color\"></avue-input-color>\n</el-form-item>\n<el-form-item label=\"文字粗细\">\n<avue-select v-model=\"edit_item.option.fontWeight\"\n             :dic=\"[{ label: '正常', value: 'normal' }, { label: '粗体', value: 'bolder' }, { label: '细体', value: 'lighter' }]\">\n</avue-select>\n</el-form-item>\n\n<el-form-item label=\"前缀值*\">\n<avue-input v-model=\"edit_item.option.Prefix\" ></avue-input>\n</el-form-item>\n<el-form-item label=\"前缀字体大小\">\n<avue-input-number v-model=\"edit_item.option.PrefixFontSize\"\n                   :max=\"200\"></avue-input-number>\n</el-form-item>\n<el-form-item label=\"前缀字体颜色\">\n<avue-input-color v-model=\"edit_item.option.PrefixColor\"></avue-input-color>\n</el-form-item>\n<el-form-item label=\"前缀文字粗细\">\n<avue-select v-model=\"edit_item.option.PrefixFontWeight\"\n             :dic=\"[{ label: '正常', value: 'normal' }, { label: '粗体', value: 'bolder' }, { label: '细体', value: 'lighter' }]\">\n</avue-select>\n</el-form-item>\n\n\n\n\n\n<el-form-item label=\"后缀值*\">\n<avue-input v-model=\"edit_item.option.Suffix\" ></avue-input>\n</el-form-item>\n<el-form-item label=\"后缀字体大小\">\n<avue-input-number v-model=\"edit_item.option.SuffixFontSize\"\n                   :max=\"200\"></avue-input-number>\n</el-form-item>\n<el-form-item label=\"后缀字体颜色\">\n<avue-input-color v-model=\"edit_item.option.SuffixColor\"></avue-input-color>\n</el-form-item>\n<el-form-item label=\"后缀文字粗细\">\n<avue-select v-model=\"edit_item.option.SuffixFontWeight\"\n             :dic=\"[{ label: '正常', value: 'normal' }, { label: '粗体', value: 'bolder' }, { label: '细体', value: 'lighter' }]\">\n</avue-select>\n</el-form-item>\n\n\n\n<el-form-item label=\"间距\">\n<avue-input-number v-model=\"edit_item.option.split\"\n                   :max=\"200\"></avue-input-number>\n</el-form-item>\n<el-form-item label=\"纵向间距\" v-show=\"edit_item.option.type === 'line'\">\n<avue-input-number v-model=\"edit_item.option.verticalSplit\"\n                   :max=\"200\"></avue-input-number>\n</el-form-item>\n<el-form-item label=\"边框大小\">\n<avue-input-number v-model=\"edit_item.option.strokeWidth\"\n                   :max=\"50\"></avue-input-number>\n</el-form-item>\n<el-form-item label=\"内边框颜色\">\n<avue-input-color v-model=\"edit_item.option.borderColor\"></avue-input-color>\n</el-form-item>\n<el-form-item label=\"外边框颜色\">\n<avue-input-color v-model=\"edit_item.option.outBorderColor\"></avue-input-color>\n</el-form-item>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  methods:{\n\n  },\n  computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n}\n</script>\n\n"
        },
        {
            "type": "datetime",
            "content": "<!-- 实时时间配置 -->\n<template>\n  <div v-if=\"hasOption\">\n    <el-form-item label=\"时间格式\">\n      <avue-select v-model=\"edit_item.option.format\"\n                   :dic=\"[{ label: '日期', value: 'yyyy年MM月dd日' }, { label: '日期+时分', value: 'yyyy年MM月dd日 hh时mm分' }, { label: '日期+时分秒', value: 'yyyy年MM月dd日 hh时mm分ss秒' }, { label: '日期(无年)', value: 'MM月dd日' }, { label: '时分', value: 'hh时mm分' }, { label: '时分秒', value: 'hh时mm分ss秒' }, { label: '星期', value: 'day' }]\">\n      </avue-select>\n    </el-form-item>\n    <el-form-item label=\"自定义格式\">\n      <avue-input v-model=\"edit_item.option.format\">\n      </avue-input>\n    </el-form-item>\n    <el-form-item label=\"字体间距\">\n      <avue-input-number v-model=\"edit_item.option.split\"\n                         :max=\"200\"></avue-input-number>\n    </el-form-item>\n    <el-form-item label=\"字体大小\">\n      <avue-input-number v-model=\"edit_item.option.fontSize\"\n                         :max=\"200\"></avue-input-number>\n    </el-form-item>\n    <el-form-item label=\"字体背景\">\n      <avue-input-color v-model=\"edit_item.option.backgroundColor\"></avue-input-color>\n    </el-form-item>\n\n    <el-form-item label=\"字体颜色\">\n      <avue-input-color v-model=\"edit_item.option.color\"></avue-input-color>\n    </el-form-item>\n    <el-form-item label=\"对其方式\">\n      <avue-select v-model=\"edit_item.option.textAlign\"\n                   :dic=\"[{ label: '居中', value: 'center' }, { label: '左对齐', value: 'left' }, { label: '右对齐', value: 'right' }]\">\n      </avue-select>\n    </el-form-item>\n    <el-form-item label=\"文字粗细\">\n      <avue-select v-model=\"edit_item.option.fontWeight\"\n                   :dic=\"[{ label: '正常', value: 'normal' }, { label: '粗体', value: 'bolder' }, { label: '细体', value: 'lighter' }]\">\n      </avue-select>\n    </el-form-item>\n  </div>\n</template>\n\n<script>\n\n  export default {\n    computed:{\n      hasOption(){\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n        return true\n      }\n    }\n}\n</script>\n\n<style>\n</style>"
        },
        {
            "type": "数字",
            "content": ""
        },
        {
            "type": "num",
            "content": "<!-- 文字配置 -->\n<template>\n  <div v-if=\"hasOption\">\n    <el-form-item label=\"文本内容\">\n      <template slot=\"label\">\n        <el-tooltip placement=\"top\">\n          <div slot=\"content\"><div v-html=\"context.templateGuide\"/></div>\n          <el-button style=\"color: darkred;\">数字<span class=\"guide\">\n         <i class=\"el-icon-warning-outline\" title=\"查看文档\"></i>\n        </span></el-button>\n        </el-tooltip>        \n      </template>        \n      <avue-input v-model=\"edit_item.option.value\"></avue-input>\n    </el-form-item>\n\t\t<el-form-item label=\"整体\">\n      <avue-switch v-model=\"edit_item.option.whole\"\n                         ></avue-switch>\n    </el-form-item>\n    <el-form-item label=\"精度\">\n      <avue-input-number v-model=\"edit_item.option.decimals\"\n                         ></avue-input-number>\n    </el-form-item>\n\n    <el-form-item label=\"经历时长\">\n      <avue-input-number v-model=\"edit_item.option.duration\"\n                         ></avue-input-number>\n    </el-form-item>\n    \n<el-collapse accordion>\n      <el-collapse-item title=\"边框设置\">\n        <el-form-item label=\"X间距\">\n          <avue-slider v-model=\"edit_item.option.splitx\"/>\n        </el-form-item>\n         <el-form-item label=\"边框\">\n          <avue-radio v-model=\"edit_item.option.type\" :dic=\"[{ label: '无边框', value: '' }, { label: '内置边框', value: 'border' }, { label: '内置图片', value: 'img' }]\"/>\n        </el-form-item>\n        <template v-if=\"edit_item.option.type==='border'\">\n          <el-form-item label=\"边框颜色\">\n            <avue-input-color v-model=\"edit_item.option.borderColor\"/>\n          </el-form-item>\n          <el-form-item label=\"边框宽度\">\n            <avue-input-number v-model=\"edit_item.option.borderWidth\" :max=\"10\"/>\n          </el-form-item>\n        </template>\n        <template v-if=\"edit_item.option.type==='img'\">\n          <el-form-item label=\"背景图片\">\n            <img v-if=\"edit_item.option.backgroundImage\"\n                 :src=\"edit_item.option.backgroundImage\"\n                 alt=\"\" @click=\"parentCompent.handleOpenImg('edit_item.option.backgroundImage')\" \n                 width=\"100%\" />\n            <el-input v-model=\"edit_item.option.backgroundImage\">\n              <div @click=\"parentCompent.handleOpenImg('edit_item.option.backgroundImage')\" slot=\"append\">\n                <i class=\"iconfont icon-img\">x</i>\n              </div>\n            </el-input>\n          </el-form-item>\n        </template>\n\n</el-collapse-item>\n\n<el-collapse-item title=\"内部设置\">\n    <el-form-item label=\"对齐\">\n      <avue-select v-model=\"edit_item.option.textAlign\"\n                   :dic=\"textAlignDic\">\n      </avue-select>\n    </el-form-item>\n    <el-form-item label=\"字体大小\">\n      <avue-input-number v-model=\"edit_item.option.fontSize\"\n                         :max=\"200\"></avue-input-number>\n    </el-form-item>       \n\t  \n    <el-form-item label=\"文字粗细\">\n      <avue-select v-model=\"edit_item.option.fontWeight\"\n                   :dic=\"fontWeightDic\">\n      </avue-select>\n    </el-form-item>\n   \n    <el-form-item label=\"字体颜色\" v-if=\"!edit_item.option.gradient\">\n      <avue-input-color v-model=\"edit_item.option.color\"></avue-input-color>\n    </el-form-item>\n    <el-form-item label=\"字体背景\" v-if=\"!edit_item.option.gradient\">\n      <avue-input-color v-model=\"edit_item.option.backgroundColor\"></avue-input-color>\n    </el-form-item>\n      </el-collapse-item>\n\n      <el-collapse-item title=\"前缀设置\">\n        <template v-if=\"!edit_item.option.row\">\n          <el-form-item label=\"对其方式\">\n            <avue-select v-model=\"edit_item.option.prefixTextAlign\" :dic=\"textAlignDic\"/>\n          </el-form-item>\n        </template>\n        <el-form-item label=\"X间距\">\n          <avue-slider v-model=\"edit_item.option.prefixSplitx\"/>\n        </el-form-item>\n        <el-form-item label=\"Y间距\">\n          <avue-slider v-model=\"edit_item.option.prefixSplity\"/>\n        </el-form-item>\n        <el-form-item label=\"文本\">\n          <avue-input v-model=\"edit_item.option.prefixText\"/>\n        </el-form-item>\n        <el-form-item label=\"颜色\">\n          <avue-input-color v-model=\"edit_item.option.prefixColor\"/>\n        </el-form-item>\n        <el-form-item label=\"字体大小\">\n          <avue-input-number v-model=\"edit_item.option.prefixFontSize\" :max=\"200\"/>\n        </el-form-item>\n      </el-collapse-item>\n      <el-collapse-item title=\"后缀设置\">\n        <el-form-item label=\"X间距\">\n          <avue-slider v-model=\"edit_item.option.suffixSplitx\"/>\n        </el-form-item>\n        <el-form-item label=\"文本\">\n          <avue-input v-model=\"edit_item.option.suffixText\"/>\n        </el-form-item>\n        <el-form-item label=\"颜色\">\n          <avue-input-color v-model=\"edit_item.option.suffixColor\"/>\n        </el-form-item>\n        <el-form-item label=\"字体大小\">\n          <avue-input-number v-model=\"edit_item.option.suffixFontSize\" :max=\"200\"/>\n        </el-form-item>\n      </el-collapse-item>\n    </el-collapse>\n           \n  </div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      gradientTypes:[{ label: '线性渐变', value: 'linear' }, { label: '径向渐变', value: 'radial' }],\n      textAlignDic:[{ label: '居中', value: 'center' }, { label: '左对齐', value: 'left' }, { label: '右对齐', value: 'right' }],\n      fontWeightDic:[{ label: '正常', value: 'normal' }, { label: '粗体', value: 'bolder' }, { label: '细体', value: 'lighter' }]\n      \n    }\n  },\n  methods:{\n\n  },\n  computed:{\n      hasOption(){\n        if(this.edit_item.titleOption==undefined)\n          this.edit_item.titleOption={}\n        if(this.edit_item.option==undefined)\n          this.edit_item.option={}\n\n        return true\n      }\n    }\n}\n</script>\n\n"
        },
        {
            "type": "DataDisplay",
            "content": ""
        },
        {
            "type": "DataPanel",
            "content": ""
        }
    ],
    "fields": [
        {
            "title": "DATAV装饰",
            "list": [
                {
                    "type": "装饰1",
                    "label": "装饰1",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-1 style=\"width:100%;height:100%;\"  v-bind=\"styleArr\"  /> \n    \n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }        \n        return ret\n      }\n    }\n  }\n</script>",
                    "option": {
                        "color1": "",
                        "color2": ""
                    }
                },
                {
                    "type": "装饰2",
                    "label": "装饰2",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-2 :reverse=\"false\"   style=\"width:100%;height:100%;\"  v-bind=\"styleArr\"  /> \n    \n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }\n        console.info(ret)\n        return ret\n      }\n    }\n  }\n</script>",
                    "option": {}
                },
                {
                    "type": "装饰3",
                    "label": "装饰3",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "\n<dv-decoration-3 style=\"width:100%;height:100%;\" v-bind=\"styleArr\"  /> \n    \n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }\n        return ret\n      }\n    } \n  }\n</script>  ",
                    "option": {
                        "color1": "",
                        "color2": ""
                    }
                },
                {
                    "type": "装饰4",
                    "label": "装饰4",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-4 :reverse=\"false\"  style=\"width:100%;height:100%;\"  v-bind=\"styleArr\"  /> \n    \n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }\n        ret['dur']=this.self.option.dur||3\n        return ret\n      }\n    }\n  } \n</script>",
                    "option": {
                        "color1": "",
                        "color2": "",
                        "dur": 3
                    }
                },
                {
                    "type": "装饰5",
                    "label": "装饰5",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-5 style=\"width:100%;height:100%;\" v-bind=\"styleArr\"  /> \n    \n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }\n        console.info(ret)\n        return ret\n      }\n    }\n  } \n</script>",
                    "option": {
                        "color1": "",
                        "color2": ""
                    }
                },
                {
                    "type": "装饰6",
                    "label": "装饰6",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-6 style=\"width:100%;height:100%;\" v-bind=\"styleArr\"  /> \n    \n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }\n        console.info(ret)\n        return ret\n      }\n    }\n  }\n</script>",
                    "option": {}
                },
                {
                    "type": "装饰7",
                    "label": "装饰7",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-7 style=\"width:100%;height:30px;\" v-bind=\"styleArr\">\n{{ <t>text</t> }}\n </dv-decoration-7>\n\n    \n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }\n        console.info(ret)\n        return ret\n      }\n    }\n  }\n</script>",
                    "option": {
                        "text": "xxxxxx"
                    }
                },
                {
                    "type": "装饰8",
                    "label": "装饰8",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-8 :reverse=\"false\" style=\"width:100%;height:100%;\" v-bind=\"styleArr\"  /> \n    \n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }\n        console.info(ret)\n        return ret\n      }\n    }\n  }\n</script>",
                    "option": {}
                },
                {
                    "type": "装饰9",
                    "label": "装饰9",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-9 style=\"width:width:100%;height:100%;\" v-bind=\"styleArr\" > \n  {{ <t>text</t> }}\n </dv-decoration-9>\n\n    \n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }\n        console.info(ret)\n        return ret\n      }\n    }\n  }\n</script>",
                    "option": {
                        "text": "66%"
                    }
                },
                {
                    "type": "装饰10",
                    "label": "装饰10",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-10 style=\"width:100%;height:100%;\" v-bind=\"styleArr\" />\n  \n \n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }\n        \n        return ret\n      }\n    }\n  }\n</script>",
                    "option": {}
                },
                {
                    "type": "装饰11",
                    "label": "装饰11",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-11 style=\"width:100%;height:100%;\" v-bind=\"styleArr\" >\n  {{ <t>text</t> }}\n  </dv-decoration-11>\n\n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }        \n        return ret\n      }\n    }\n  }\n</script>",
                    "option": {
                        "text": "dv-decoration-11"
                    }
                },
                {
                    "type": "装饰12",
                    "label": "装饰12",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-decoration-12 style=\"width:100%;height:100%;\"  v-bind=\"styleArr\" />\n\n<script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }        \n        return ret\n      }\n    }\n  }\n</script>  ",
                    "option": {}
                }
            ]
        },
        {
            "title": "DATAV数据",
            "list": [
                {
                    "type": "动态环图",
                    "label": "动态环图",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-active-ring-chart :config=\"{  \n            data: Enumerable.from(cur_ds).skip(1).select(x=> { \n              return {'name':x[0],value:x[1]} \n            }).toArray()\n,clor:colorArr\n,radius:self.option.radius||'50%'\n,activeRadius:self.option.activeRadius||'55%'\n,lineWidth:self.option.lineWidth||20\n,activeTimeGap:self.option.activeTimeGap||3000\n,digitalFlopStyle:{  fontSize: self.option.style_fontSize||25,  fill:self.option.style_fill|| '#fff'}\n,digitalFlopToFixed:self.option.digitalFlopToFixed||0\n,digitalFlopUnit:self.option.digitalFlopUnit||''\n,animationFrame:self.option.animationFrame||50\n,showOriginValue:self.option.showOriginValue||false                 \n          }\" style=\"width:100%;height:100%;\" />\n\n  <script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }        \n        return ret\n      },\n     colorArr(){\n        if(this.self.option.barColor)\n          return Enumerable.from(this.self.option.barColor).select(x=> x.color1).toArray()    \n        else return null\n      }\n    }\n  }\n</script>",
                    "option": {
                        "style_fontSize": 25,
                        "style_fill": "",
                        "radius": "50%",
                        "activeRadius": "55%",
                        "lineWidth": 20,
                        "activeTimeGap": 3000,
                        "digitalFlopToFixed": 0,
                        "digitalFlopUnit": "",
                        "animationFrame": 50,
                        "showOriginValue": false
                    }
                },
                {
                    "type": "胶囊柱图",
                    "label": "胶囊柱图",
                    "gridName": "_random_",
                    "h": 8,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "\n<dv-capsule-chart :config=\"{  \n            data: Enumerable.from(cur_ds).skip(1).select(x=> { \n              return {'name':x[0],value:x[1]} \n            }).toArray()\n              ,unit:self.option.unit||''\n\t\t\t\t\t,colors:colorArr||['#37a2da', '#32c5e9', '#67e0e3', '#9fe6b8', '#ffdb5c', '#ff9f7f', '#fb7293']\n\t\t\t\t\t,showValue:self.option.showValue||false\n          }\" \n:style=\"'width:100%;height:100%;color:'+(self.option.color||defaultsetting['COLOR'])\" />\n  <script>\n  export default {\n    computed:{\n      styleArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          ret['color']=[this.self.option.color1,this.self.option.color2]\n        }        \n        return ret\n      },\n     colorArr(){\n        if(this.self.option.barColor)\n          return Enumerable.from(this.self.option.barColor).select(x=> x.color1).toArray()    \n        else return null\n      }\n    }\n  }\n</script>",
                    "option": {
                        "barColor": [],
                        "showValue": false,
                        "color": ""
                    }
                },
                {
                    "type": "水位图",
                    "label": "水位图",
                    "gridName": "_random_",
                    "h": 8,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-water-level-pond :config=\" {\n            data: [<t>value</t>  ],\n           \t\tshape:self.option.shape||'rect',\n               waveOpacity:self.option.waveOpacity||0.4,\n               waveHeight:self.option.waveHeight||40,\n               waveNum:self.option.waveNum||3 ,\n                 formatter:self.option.formatter||'{value}%' ,\n                colors:colorArr\n                 \n          }\" style=\"width:100%;height:100%;\" />\n<script>\n  export default {\n    computed:{\n      colorArr(){\n        let ret={}\n        if(this.self.option.color1 && this.self.option.color2 && this.self.option.color1!='' && this.self.option.color2!=''){\n          return [this.self.option.color1,this.self.option.color2]\n        }        \n        \n      }\n    }\n  }\n</script>",
                    "option": {
                        "barColor": [],
                        "shape": "rect",
                        "waveOpacity": 0.4,
                        "waveHeight": 40,
                        "waveNum": 3,
                        "formatter": "{value}%",
                        "color1": "",
                        "color2": "",
                        "value": "12"
                    }
                },
                {
                    "type": "进度池",
                    "label": "进度池",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-percent-pond  :config=\"{\n            value:Number( <t>value</t> )\n\t\t\t\t,borderWidth:self.option.borderWidth  ||3\n,borderGap:self.option.borderGap  ||3\n,lineDash:buildArr('lineDash')||[5,1]\n,textColor:self.option.textColor  ||defaultsetting['COLOR']\n,borderRadius:self.option.borderRadius  ||5\n,localGradient:self.option. localGradient ||false\n,formatter:self.option. formatter ||'{value}%'\n,colors:buildArr('color')||['#3DE7C9', '#00BAFF']\n          }\" style=\"width:100%;height:100%;\" />\n\n<script>\n  export default {\n    methods:{\n      buildArr(para){\n        if(this.self.option[para+'1'] && this.self.option[para+'2'] \n           && this.self.option[para+'1']!='' && this.self.option[para+'2']!=''){\n          return [ this.self.option[para+'1'],this.self.option[para+'2'] ]\n        }\n      }\n    }\n  }\n</script>",
                    "option": {
                        "borderWidth": 3,
                        "borderGap": 3,
                        "lineDash1": 5,
                        "lineDash2": 1,
                        "textColor": "",
                        "borderRadius": 5,
                        "localGradient": false,
                        "formatter": "{value}%",
                        "value": "6"
                    }
                },
                {
                    "type": "飞线图",
                    "label": "飞线图",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-flyline-chart :config=\"config\" style=\"width:100%;height:100%;\" />"
                },
                {
                    "type": "飞线图增强版",
                    "label": "飞线图增强版",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-flyline-chart-enhanced :config=\"config\" style=\"width:100%;height:100%;\" />"
                },
                {
                    "type": "锥形柱图",
                    "label": "锥形柱图",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-conical-column-chart :config=\"{\n            data:Enumerable.from(cur_ds).skip(1).select(x=> { \n              return {'name':x[0],value:x[1]} \n            }).toArray()\n            ,fontSize\t :self.option.fontSize\t ||12\n            ,imgSideLength:self.option.imgSideLength||\t30\n            ,columnColor\t :self.option.columnColor\t ||'rgba(0, 194, 255, 0.4)'\n            ,textColor\t :self.option.textColor\t ||defaultsetting['COLOR']\n            ,showValue\t :self.option.showValue\t ||\tfalse\n\t\t\t\t,img\t :self.option.img\t ||\t[]\n          }\" style=\"width:100%;height:100%;\" /> ",
                    "option": {
                        "img": [
                            ""
                        ]
                    }
                },
                {
                    "type": "datav数字翻牌器",
                    "label": "datav数字翻牌器",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "content": "<dv-digital-flop :config=\"{\nnumber: [Number( <t>value</t> )],style: {\nfontSize:self.option.fontSize||30,\n  fill: self.option.fill||'#3de7c9' },\n    content\t:self.option.content  ||''\n      ,toFixed\t:self.option.toFixed  ||0\n        ,textAlign:self.option.textAlign  ||'center'\n          ,rowGap:self.option.rowGap  ||\t0\n            ,animationCurve:self.option.animationCurve  ||'easeOutCubic'\n              ,animationFrame:self.option.animationFrame  ||50\n\n}\" \n            style=\"width:100%;height:100%;\" />\n",
                    "option": {
                        "number": [],
                        "content": "{nt}个",
                        "toFixed": 0,
                        "textAlign": "center",
                        "rowGap": 0,
                        "style": {
                            "fontSize": 30,
                            "fill": "#3de7c9"
                        },
                        "animationCurve": "easeOutCubic",
                        "animationFrame": 50,
                        "value": "66"
                    }
                },
              {
                "type": "dv_scroll_board",
                "label": "轮播表",
                "gridName": "_random_",
                "h": 4,
                "span": 6,
                "icon": "",
                "color": "#fff",
                "display": true,
                "component": "dync-template",
                "style": {
                  "height": "100%"
                },
                "option": {
                  "rowNum": 5,
                  "waitTime": 2000,
                  "carousel": "single",
                  "unit": "",
                  "sort": true,
                  "headerBGC": "#00BAFF",
                  "oddRowBGC": "#003B51",
                  "evenRowBGC": "#0A2732",
                  "headerHeigh": 35,
                  "index": false,
                  "indexHeader": "#",
                  "hoverPause": true
                },
                "content": "<template>\n<dv-scroll-board :config=\"{\n            header: cur_ds[0],\n            data: color_data\n,columnWidth :c_prop('width',true)\n,align :c_prop('align')\n,rowNum\t       :self.option.rowNum\t       || 5        \n,waitTime\t   :self.option.waitTime\t   ||  2000    \n,carousel\t   :self.option.carousel\t   ||  'single'\n,unit\t       :self.option.unit\t       ||  ''      \n,sort\t       :self.option.sort\t       ||  true              \n,rowNum\t       :self.option.rowNum\t     ||  5         \n,headerBGC\t   :self.option.headerBGC\t ||  '#00BAFF' \n,oddRowBGC\t   :self.option.oddRowBGC\t ||  '#003B51' \n,evenRowBGC\t   :self.option.evenRowBGC\t ||  '#0A2732' \n,waitTime\t   :self.option.waitTime\t ||  2000      \n,headerHeight\t:self.option.headerHeight||  35        \n,index\t       :self.option.index\t     ||  false     \n,indexHeader\t:self.option.indexHeader||  '#'        \n,carousel\t   :self.option.carousel\t ||  'single'  \n,hoverPause\t   :self.option.hoverPause\t ||  \tfalse \n\n          }\" style=\"width:100%;height:100%;\" />\n</template>\n<script>\nexport default{\n  data(){   \n    return {a:1}; \n  },\n  methods:{\n    c_prop(prop,is_num=false){\n      let ret_arr=new Array(Enumerable.from(this.self.fields).where(x=>x.selected).count());\n      let ret=Enumerable.from(this.self.fields).where(x=>x.selected)\n      .forEach((x,idx)=>{\n        if(x[prop]!='') ret_arr[idx]=is_num?parseFloat(x[prop]):x[prop]\n        });\n      return ret_arr;\n    },\n  },\n  computed:{\n    color_data(){\n      if(Enumerable.from(this.self.fields).where(x=>x.selected && x.color).count()==0)\n        return _this.cur_ds.slice(1);\n      let ret_arr=cellreport.tool.deepClone(_this.cur_ds.slice(1));\n      Enumerable.from(this.self.fields).where(x=>x.selected)\n      .forEach((x,i)=>{\n        if(x.selected && x.color ) {\n          Enumerable.from(ret_arr)\n          .forEach(line=>{\n            line[i]=`<span style='color:${x.color}'>${line[i]}</span>`\n          })\n        }\n      })\n      \n      return ret_arr;\n    }\n\n  }\n}\n</script>\n<style>\n.dv-scroll-board .header{\n    font-weight: 600;\n}\n</style>"
              },
                {
                    "type": "dv_scroll_ranking_board",
                    "label": "排名轮播表",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 6,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100%"
                    },
                    "option": {
                        "rowNum": 5,
                        "waitTime": 2000,
                        "carousel": "single",
                        "unit": "",
                        "sort": true,
                        "headerBGC": "#00BAFF",
                        "oddRowBGC": "#003B51",
                        "evenRowBGC": "#0A2732",
                        "headerHeigh": 35,
                        "index": false,
                        "indexHeade": "#",
                        "hoverPause": true
                    },
                    "content": "<dv-scroll-ranking-board :config=\"{\n            data: Enumerable.from(cur_ds).skip(1).select(x=> { \n              return {'name':x[0],value:x[1]} \n            }).toArray()\n,rowNum\t       :self.option.rowNum\t       || 5        \n,waitTime\t   :self.option.waitTime\t   ||  2000    \n,carousel\t   :self.option.carousel\t   ||  'single'\n,unit\t       :self.option.unit\t       ||  ''      \n,sort\t       :self.option.sort\t       ||  true    \n          }\" style=\"width:100%;height:100%;color:defaultsetting['COLOR']\" />"
                }
            ]
        },
        {
            "title": "数据展示",
            "list": [
                {
                    "type": "DataBox",
                    "label": "DataBox",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 24,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100px"
                    },
                    "content": "<template>\n<div class=\"cr-data-box\">\n  <div class=\"item\"  @click=\"my_sayHi2\">\n    <div class=\"item-icon\" style=\"background-color: rgb(49, 180, 141);\">\n        <i class=\"el-icon-warning\"></i>\n    </div> \n    <div class=\"item-info\">\n        <span class=\"title\" style=\"color: rgb(49, 180, 141);\">12,332</span>\n        <div class=\"info\">{{my_test_computed}}日志{{my_t_data1 }}</div>\n    </div> \n  </div>\n</div>  \n</template>\n<script>  \n   \n   return {\n     data:{\n       my_t_data1:'test_data1',\n       my_t_data2:'test_data2',\n       my_cnt:0,\n     },\n     computed:{\n       my_test_computed(){\n        return this.my_t_data1+'_'+this.my_cnt \n       }\n     },\n     methods:{\n         my_sayHi2() { \n            this.my_t_data1='test_'+this.my_cnt;\n            this.my_cnt++\n        },\n         my_sayHi3() { \n            //console.info(this.context.clickedEle['test'])\n            console.log(\"Hi3333\"); \n        }\n     }\n   }\n</script>\n<style>\n.cr-data-box{\n  height: 100%;\n}\n.cr-data-box .item { \n    position: relative;\n    margin: 0 auto 10px;\n    width: 96%;\n    display: flex;\n    height: 100%;\n    overflow: hidden;\n    border-radius: 5px;\n    box-sizing: border-box;\n    border: 1px solid gray\n}\n.cr-data-box .item-icon {\n    width: 100px;\n    height: 100%;\n    color: #fff;\n    text-align: center;\n    line-height: 100px;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n}\n.cr-data-box .item-icon i {\n    font-size: 48px!important;\n}\n.cr-data-box .item-info {\n    border-radius: 0 5px 5px 0;\n    border: 1px solid ;\n    border-left: none;\n    background-color: #fff;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n}\n.cr-data-box .item-info .title {\n    font-size: 30px;\n    line-height: 40px;\n    text-align: center;\n}\n.cr-data-box .item-info .info {\n    color: #999;\n    font-size: 14px; \n    text-align: center;\n}\n</style>"
                },
                {
                    "type": "DataDisplay",
                    "label": "DataDisplay",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 24,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100px"
                    },
                    "content": "<div  style=\"display: flex;align-items: center;justify-content: center;\nflex-direction: row;\">\n<div  style=\"display: flex;align-items: center;justify-content: center;flex-direction: column;\">\n\n<span style=\"margin: 8px 0 15px;font-weight: 700;font-size: 32px;color: #15a0ff;\">\n  100.00\n</span> \n<span style=\"width: 24px;height: 1px;background: #9b9b9b;\">\n</span>\n<div style=\"line-height: 32px;color: #999;\">日活跃数</div>\n</div>\n</div>"
                },
                {
                    "type": "DataProgress",
                    "label": "进度条",
                    "gridName": "_random_",
                    "h": 8,
                    "span": 8,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "overflow": "hidden"
                    },
                    "content": "<div style=\"margin: 10px;width:100%;height:100%;position: relative;\" ref=\"main\" v-if=\"oninit\">\n  \t<div :class=\"type\"  :style=\"'width:'+width+'px;height:'+width+'px'\">\n        <p v-if=\"<t>Prefix</t>\" style='margin: 0px;'\n\t\t\t\t:style=\"{\n            fontWeight: self.option.PrefixFontWeight || 'normal',\n            fontSize: (self.option.PrefixFontSize || 30) + 'px',\n            color: self.option.PrefixColor || defaultsetting['COLOR']\n\t\t      }\" \n\t\t\t>{{ <t>Prefix</t> }}</p>\n              \n\t\t\t<p style='margin: 0px;'\n            :style=\"{\n            fontWeight: self.option.fontWeight || 'normal',\n            fontSize: (self.option.fontSize || 30) + 'px',\n            color: self.option.color || defaultsetting['COLOR']\n\t\t      }\"   \n              >{{ <t>before_value</t> }} {{ <t>value</t> }}{{ <t>after_value</t> }}</p> \n        <p  v-if=\"<t>Suffix</t>\" style='margin: 0px;'\n        \t:style=\"{\n\t\t\t\t  fontWeight: self.option.SuffixFontWeight || 'normal',\n            fontSize: (self.option.SuffixFontSize || 30) + 'px',\n            color: self.option.SuffixColor ||defaultsetting['COLOR']\n      }\"                                              \n\t\t\t>{{ <t>Suffix</t> }}</p> \n    </div> \n\t<el-progress  :type=\"type\" :text-inside=\"true\"\n    :width=\"width\"\n    :stroke-width=\"self.option.strokeWidth||20\" \n    :percentage=\"<t>value</t>||0\" \n    :color=\"self.option.borderColor||'#409eff'\">\n    </el-progress> \n</div>\n<script>   \n export default{\n  data:{\n    width:null\n  },\n  watched:{\n  },\n  computed:{ \n    type(){\n     \treturn  this.self.option.type\n    },\n    oninit(){\n        this.$nextTick(()=> {\n         if(this.type===\"circle\" ||  this.type===\"dashboard\" )\n         { \n          this.width=Math.min(this.$el.clientWidth,this.$el.clientHeight)-20\n           this.$el.querySelectorAll('path')[0].setAttribute('stroke', this.self.option.outBorderColor||'#e5e9f2')\n         } else { \n            this.$el.querySelectorAll('.el-progress-bar__outer')[0].style.backgroundColor = this.self.option.outBorderColor||'#e5e9f2'\n          }\n        })\n        return true\n      }\n    }\n}\n</script>      \n<style>\n.circle {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n.dashboard {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.line {\n    margin-bottom: 20px;\n    position: relative;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    justify-content:space-between\n}      \n</style>      ",
                    "titleOption": {},
                    "option": {
                        "value": "0",
                        "type": "circle"
                    }
                },
                {
                    "type": "DataRotate",
                    "label": "DataRotate",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 24,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100px"
                    },
                    "content": "<div style=\"color: #fff;background-color: rgb(49, 180, 141); margin: 5px 10px;-webkit-box-sizing: border-box;box-sizing: border-box;position: relative;border-radius: 3px;\">\n  <div style=\"padding: 10px 20px;\">\n    <span style=\" margin-bottom: 5px;font-size: 38px;white-space: nowrap;font-weight: 300;display: block;\">\n      150.00\n    </span>\n    <span style=\" font-size: 15px;\">\n      新订单\n    </span>\n  <i class=\"el-icon-warning\" style=\"-webkit-transition: all .3s linear;transition: all .3s linear;position: absolute;top: 20px;right: 20px;font-size: 65px;color: rgba(0,0,0,.15);\"></i>\n  </div>\n\n<a href=\"javascript:void(0);\" draggable=\"false\">\n  <p style=\"    position: relative; text-align: center;  padding: 3px 0; color: #fff;color: rgba(255,255,255,.8);\n    display: block;    z-index: 10;    font-size: 14px;    letter-spacing: 2px;    background: rgba(0,0,0,.1);    text-decoration: none;\">\n  \t更多\n    <i class=\"el-icon-arrow-right\"></i>\n  </p>\n</a>\n\n</div>"
                },
                {
                    "type": "DataPanel",
                    "label": "DataPanel",
                    "gridName": "_random_",
                    "h": 4,
                    "span": 24,
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "dync-template",
                    "style": {
                        "height": "100px"
                    },
                    "content": "<div style=\"padding: 0 30px;margin: 0 20px;cursor: pointer;flex:1;font-size: 12px;\nposition: relative;overflow: hidden;color: #666;background: #fff;\nbox-shadow: 4px 4px 40px rgb(0 0 0 / 5%);border-color: rgba(0,0,0,.05);\ndisplay: flex;align-items: center;justify-content: space-between;\">\n<div style=\"font-size: 52px;\">\n<i class=\"el-icon-message\" style=\"color: rgb(0, 167, 208);\"></i>\n</div>\n<div style=\"text-align: center;\">\n<div style=\"line-height: 18px;color: rgba(0,0,0,.45);font-size: 16px;margin-bottom: 12px;\">最新拜访</div>\n<span style=\"font-size: 20px;\">102,400</span>\n</div>\n</div>"
                },
                {
                    "type": "datetime",
                    "label": "日期时间",
                    "h": 4,
                    "span": 6,
                    "component": "dync-template",
                    "gridName": "_random_",
                    "icon": "icon-table",
                    "style": {
                        "height": "100%"
                    },
                    "color": "#fff",
                    "display": true,
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "content": "<template>\n  <eleDateTime :self='self'/> \n</template>\n",
                    "option": {
                        "fontWeight": "normal",
                        "textAlign": "center",
                        "color": "",
                        "format": "",
                        "split": 2,
                        "fontSize": 20
                    }
                },
                {
                    "type": "num",
                    "label": "数字翻牌器",
                    "h": 4,
                    "span": 6,
                    "component": "dync-template",
                    "gridName": "_random_",
                    "icon": "icon-table",
                    "style": {
                        "height": "100%"
                    },
                    "color": "#fff",
                    "display": true,
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "content": "<eleFlop :self=\"self\"  :data=\"<t>value</t>\"> \n</eleFlop> \n        ",
                    "titleOption": {},
                    "option": {
                        "splitx": 0,
                        "splity": 0,
                        "split": 0,
                        "lineHeight": 0,
                        "value": "12345",
                        "decimals": 0,
                        "duration": 2,
                        "type": "",
                        "fontSize": 30,
                        "fontWeight": "bolder",
                        "textAlign": "left",
                        "whole": true,
                        "prefixSplitx": 0,
                        "prefixSplity": 0,
                        "suffixSplitx": 0,
                        "prefixText": "",
                        "suffixText": ""
                    }
                }
            ]
        },
        {
            "title": "echarts图",
            "list": [
                {
                    "type": "bar",
                    "label": "柱状图",
                    "gridName": "_random_",
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "echarts",
                    "style": {
                        "height": "100%"
                    },
                    "series_type": "{\"type\":\"bar\"}",
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "dataType": 0,
                    "optionData": [
                        [
                            "手机品牌",
                            "值1",
                            "值2"
                        ],
                        [
                            "苹果",
                            10879,
                            11123
                        ],
                        [
                            "三星",
                            34879,
                            42345
                        ],
                        [
                            "小米",
                            23879,
                            32345
                        ],
                        [
                            "oppo",
                            54879,
                            12345
                        ],
                        [
                            "vivo",
                            3487,
                            23451
                        ]
                    ],
                    "option": {
                        "gridX": 90,
                        "gridY": 0,
                        "gridX2": 50,
                        "gridY2": 0,
                        "legend": true,
                        "nameColor": "",
                        "lineColor": "",
                        "xNameFontSize": 16,
                        "yNameFontSize": 16,
                        "labelShow": true,
                        "labelShowColor": "#fff",
                        "labelShowFontSize": 14,
                        "xAxisinterval": 1,
                        "labelShowFontWeight": 300,
                        "yAxisInverse": false,
                        "xAxisInverse": false,
                        "xAxisShow": true,
                        "yAxisShow": true,
                        "yAxisNameGap": 15,
                        "yAxisNameRotate": 0,
                        "xAxisSplitLineShow": false,
                        "yAxisSplitLineShow": false,
                        "barWidth": 10,
                        "barRadius": 8,
                        "barColor": [
                            {
                                "color1": "#83bff6",
                                "color2": "#188df0",
                                "postion": 90,
                                "$index": 0,
                                "_show": true
                            },
                            {
                                "color1": "#23B7E5",
                                "color2": "#564AA3",
                                "postion": 50,
                                "$index": 1,
                                "_show": true
                            }
                        ],
                        "barMinHeight": 2,
                        "tipFontSize": 22,
                        "titleShow": true,
                        "titleColor": "#FFD700",
                        "titleFontSize": 20,
                        "titlePostion": "center",
                        "subTitleColor": "rgba(30, 144, 255, 1)",
                        "subTitleFontSize": 20,
                        "borderWidth": 0,
                        "shadowBlur": 0,
                        "shadowOffsetX": 0,
                        "shadowOffsetY": 0,
                        "itemStyleOpacity": 0,
                        "LabelRotate": 0,
                        "LabelDistance": 0
                    },
                    "content": "\n//console.info(option)\n//option.series[2].type='line'",
                    "h": 15,
                    "span": 12
                },
                {
                    "type": "echart",
                    "label": "极坐标堆叠图",
                    "gridName": "_random_",
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "echarts",
                    "style": {
                        "height": "100%"
                    },
                    "series_type": "{\"type\": \"bar\", \"coordinateSystem\": \"polar\",\"stack\": \"a\"}",
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "content": "option = {\n              //backgroundColor: '#fff',\n              legend: {},\n              tooltip: {},\n              \"polar\": {},\"angleAxis\":{},\n              dataset: {\n                  // 提供一份数据。__valid_data__为自动生成，如果全自定义，就不要使用\n                  source: __valid_data__\n              },\n              // 声明一个 X 轴，类目轴（category）。默认情况下，类目轴对应到 dataset 第一列。\n              \n              // 声明一个 Y 轴，数值轴。\n              radiusAxis: {type: 'category'},\n              // 声明多个 bar 系列，默认情况下，每个系列会自动对应到 dataset 的每一列。\n                series:function(){\n                  let series_type=[]\n                  __valid_data__[0].slice(1).forEach(ele=>{\n                      series_type.push({\"type\": \"bar\", \"coordinateSystem\": \"polar\",\"stack\": \"a\"})\n                  }); return series_type\n                }() \n            }",
                    "h": 15,
                    "span": 12
                },
                {
                    "type": "scatter",
                    "label": "散点图",
                    "gridName": "_random_",
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "echarts",
                    "style": {
                        "height": "100%"
                    },
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "optionData": [
                        {
                            "data": [
                                [
                                    1,
                                    8.04
                                ],
                                [
                                    2,
                                    6.95
                                ]
                            ]
                        },
                        {
                            "data": [
                                [
                                    1,
                                    4.04
                                ],
                                [
                                    2,
                                    3.95
                                ]
                            ]
                        }
                    ],
                    "option": {
                        "lineSize": 25,
                        "barColor": [
                            {
                                "postion": 0.2,
                                "color1": "#91c7ae"
                            },
                            {
                                "postion": 0.8,
                                "color1": "#63869e"
                            },
                            {
                                "postion": 1,
                                "color1": "#c23531"
                            }
                        ]
                    },
                    "content": "//console.info(option)",
                    "h": 15,
                    "span": 12
                },
                {
                    "type": "line",
                    "label": "线型图",
                    "gridName": "_random_",
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "echarts",
                    "style": {
                        "height": "100%"
                    },
                    "fresh_ds": [],
                    "fresh_params": [],
                    "dataType": 0,
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "optionData": [
                        [
                            "手机品牌",
                            "值"
                        ],
                        [
                            "苹果",
                            10879
                        ],
                        [
                            "三星",
                            34879
                        ],
                        [
                            "小米",
                            23879
                        ],
                        [
                            "oppo",
                            54879
                        ],
                        [
                            "vivo",
                            3487
                        ]
                    ],
                    "option": {
                        "gridX": 90,
                        "gridY": 0,
                        "gridX2": 0,
                        "gridY2": 0,
                        "nameColor": "",
                        "lineColor": "",
                        "lineWidth": 2,
                        "xNameFontSize": 16,
                        "yNameFontSize": 16,
                        "labelShow": false,
                        "labelShowFontSize": 14,
                        "labelShowFontWeight": 300,
                        "yAxisInverse": false,
                        "xAxisInverse": false,
                        "xAxisShow": true,
                        "yAxisShow": true,
                        "xAxisSplitLineShow": false,
                        "yAxisSplitLineShow": false,
                        "barWidth": 30,
                        "barRadius": 8,
                        "barColor": [
                            {
                                "color1": "#83bff6",
                                "color2": "#188df0",
                                "postion": 90,
                                "$index": 0,
                                "_show": true
                            },
                            {
                                "color1": "#23B7E5",
                                "color2": "#564AA3",
                                "postion": 50,
                                "$index": 1,
                                "_show": true
                            }
                        ],
                        "symbolSize": 6,
                        "smooth": true,
                        "barMinHeight": 2
                    },
                    "content": "//console.info(option)\n//option.series[1].type='bar'",
                    "h": 15,
                    "span": 12
                },
                {
                    "type": "pie",
                    "label": "饼图",
                    "gridName": "_random_",
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "echarts",
                    "style": {
                        "height": "100%"
                    },
                    "series_type": "{\"type\":\"pie\"}",
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "dataType": 0,
                    "optionData": [
                        [
                            "类别",
                            "值"
                        ],
                        [
                            "苹果",
                            10879
                        ],
                        [
                            "三星",
                            34879
                        ],
                        [
                            "小米",
                            23879
                        ],
                        [
                            "oppo",
                            54879
                        ],
                        [
                            "大疆",
                            3000
                        ],
                        [
                            "抖音",
                            2000
                        ]
                    ],
                    "option": {
                        "tipColor": "#FFF",
                        "tipFontSize": 12,
                        "legend": true,
                        "legendFontSize": 14,
                        "legendPostion": "left",
                        "legendOrient": "vertical",
                        "labelShow": true,
                        "labelShowFontSize": 16,
                        "labelShowColor": "",
                        "labelShowFontWeight": "normal",
                        "barColor": [
                            {
                                "color1": "#83bff6"
                            },
                            {
                                "color1": "#23B7E5"
                            },
                            {
                                "color1": "rgba(154, 168, 212, 1)"
                            },
                            {
                                "color1": "#188df0"
                            },
                            {
                                "color1": "#564AA3"
                            }
                        ],
                        "titleShow": false,
                        "titleColor": "#FFD700",
                        "titleFontSize": 20,
                        "titlePostion": "center",
                        "subTitleColor": "rgba(30, 144, 255, 1)",
                        "subTitleFontSize": 20
                    },
                    "content": "//console.info(option)",
                    "h": 15,
                    "span": 12
                },
                {
                    "type": "gauge",
                    "label": "仪表盘",
                    "gridName": "_random_",
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "echarts",
                    "style": {
                        "height": "100%"
                    },
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "option": {
                        "lineSize": 15,
                        "axisLabelShow": false,
                        "axisLabelFontSize": 25,
                        "nameShow": false,
                        "nameFontSize": 20,
                        "valueFontSize": 30,
                        "lineColor": "",
                        "barColor": [
                            {
                                "color1": "#23B7E5",
                                "color2": "#564AA3",
                                "postion": "0.5"
                            },
                            {
                                "color1": "#f5554a",
                                "color2": "#6ef7bb",
                                "postion": "1"
                            }
                        ],
                        "max": 100,
                        "min": 0
                    },
                    "content": "\n//console.info(option)\n//option.series[0].data=[option.series[0].data[self.option.ds_line||1]]\noption.series[0].data.splice(1) ",
                    "h": 15,
                    "span": 12
                },
                {
                    "type": "funnel",
                    "label": "漏斗图",
                    "gridName": "_random_",
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "echarts",
                    "style": {
                        "height": "100%"
                    },
                    "series_type": "{\"type\": \"funnel\"}",
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "option": {
                        "legendPostion": "right",
                        "legendOrient": "horizontal",
                        "legendFontSize": 18,
                        "gridY": 50,
                        "gridY2": 20,
                        "gridX": 50,
                        "gridX2": 50,
                        "barColor": [
                            {
                                "color1": "#83bff6",
                                "color2": "#188df0",
                                "postion": 90
                            },
                            {
                                "color1": "#23B7E5",
                                "color2": "#564AA3",
                                "postion": 90
                            },
                            {
                                "color1": "#af504c",
                                "color2": "#4caf50",
                                "postion": 90
                            }
                        ]
                    },
                    "content": "//console.info(option)",
                    "h": 15,
                    "span": 12
                },
                {
                    "type": "radar",
                    "label": "雷达图",
                    "gridName": "_random_",
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "echarts",
                    "style": {
                        "height": "100%"
                    },
                    "series_type": "{\"type\":\"bar\"}",
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "dataType": 0,
                    "optionData": [
                        [
                            "类别",
                            "销售",
                            "管理",
                            "信息技术",
                            "客服",
                            "研发",
                            "市场"
                        ],
                        [
                            "预算分配",
                            4300,
                            10000,
                            28000,
                            35000,
                            50000,
                            19000
                        ],
                        [
                            "实际开销",
                            5000,
                            14000,
                            28000,
                            31000,
                            42000,
                            21000
                        ]
                    ],
                    "option": {
                        "width": "100%",
                        "height": 600,
                        "titleShow": true,
                        "title": "各部门开销",
                        "subtext": "最近一个月",
                        "shape": "polygon",
                        "radius": 75,
                        "splitNumber": 4,
                        "radarNameColor": "#fff",
                        "radarNameSize": 18,
                        "titleFontSize": 18,
                        "areaOpacity": 0.3,
                        "legend": true,
                        "legendPostion": "right",
                        "legendOrient": "vertical",
                        "legendFontSize": 12,
                        "labelShow": false,
                        "barColor": [
                            {
                                "color1": "#83bff6",
                                "color2": "#188df0",
                                "postion": 90
                            },
                            {
                                "color1": "#23B7E5",
                                "color2": "#564AA3",
                                "postion": 90
                            },
                            {
                                "color1": "#af504c",
                                "color2": "#4caf50",
                                "postion": 90
                            }
                        ]
                    },
                    "content": "console.info(option) ",
                    "h": 8,
                    "span": 12
                },
                {
                    "type": "通用echart",
                    "label": "通用图",
                    "gridName": "_random_",
                    "icon": "",
                    "color": "#fff",
                    "display": true,
                    "component": "echarts",
                    "style": {
                        "height": "100%"
                    },
                    "series_type": "{\"type\":\"bar\"}",
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "content": "option = {\n  //backgroundColor: '#fff',\n  legend: {selectedMode:'single'},//单选模式\n  tooltip: {},\n  dataset: {\n      // 提供一份数据。__valid_data__为自动生成，如果全自定义，就不要使用\n      source: __valid_data__\n  },\n  grid:{left :30,right:10,top:10,bottom:30},\n  // 声明一个 X 轴，类目轴（category）。默认情况下，类目轴对应到 dataset 第一列。\n  yAxis: {},\n  // 声明一个 Y 轴，数值轴。\n  xAxis: {type: 'category',\"axisLabel\": {\n    \"margin\": 8,\n    \"interval\":0,//解决代码,坐标轴上的刻度是否全显示\n    \"textStyle\": {\n        \"color\": \"#676767\"\n    }}},\n  // 声明多个 bar 系列，默认情况下，每个系列会自动对应到 dataset 的每一列。\n  series:function(){\n      let series_type=[]\n      __valid_data__[0].slice(1).forEach(ele=>{\n          series_type.push({\"type\":\"bar\"})\n      }); return series_type\n    }() \n}",
                    "h": 5,
                    "span": 12,
                    "option": {
                        "vaildProp": [
                            "titleList"
                        ]
                    }
                },
                {
                    "type": "map",
                    "label": "地图",
                    "h": 14,
                    "span": 8,
                    "component": "echarts",
                    "gridName": "_random_",
                    "icon": "",
                    "style": {
                        "height": "100%"
                    },
                    "color": "#fff",
                    "display": true,
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "optionData": [
                        [
                            "省份",
                            "值"
                        ],
                        [
                            "海门",
                            9
                        ],
                        [
                            "鄂尔多斯",
                            12
                        ],
                        [
                            "招远",
                            12
                        ],
                        [
                            "舟山",
                            12
                        ],
                        [
                            "齐齐哈尔",
                            14
                        ],
                        [
                            "盐城",
                            15
                        ],
                        [
                            "赤峰",
                            16
                        ],
                        [
                            "青岛",
                            18
                        ],
                        [
                            "乳山",
                            18
                        ],
                        [
                            "金昌",
                            19
                        ],
                        [
                            "泉州",
                            21
                        ],
                        [
                            "莱西",
                            21
                        ],
                        [
                            "日照",
                            21
                        ],
                        [
                            "胶南",
                            22
                        ],
                        [
                            "南通",
                            23
                        ],
                        [
                            "拉萨",
                            24
                        ],
                        [
                            "云浮",
                            24
                        ],
                        [
                            "梅州",
                            25
                        ],
                        [
                            "文登",
                            25
                        ],
                        [
                            "上海",
                            25
                        ],
                        [
                            "攀枝花",
                            25
                        ],
                        [
                            "威海",
                            25
                        ],
                        [
                            "承德",
                            25
                        ],
                        [
                            "厦门",
                            26
                        ],
                        [
                            "汕尾",
                            26
                        ],
                        [
                            "潮州",
                            26
                        ],
                        [
                            "丹东",
                            27
                        ],
                        [
                            "太仓",
                            27
                        ],
                        [
                            "曲靖",
                            27
                        ],
                        [
                            "烟台",
                            28
                        ],
                        [
                            "福州",
                            29
                        ],
                        [
                            "瓦房店",
                            30
                        ],
                        [
                            "即墨",
                            30
                        ],
                        [
                            "抚顺",
                            31
                        ],
                        [
                            "玉溪",
                            31
                        ],
                        [
                            "张家口",
                            31
                        ],
                        [
                            "阳泉",
                            31
                        ],
                        [
                            "莱州",
                            32
                        ],
                        [
                            "湖州",
                            32
                        ],
                        [
                            "汕头",
                            32
                        ],
                        [
                            "昆山",
                            33
                        ],
                        [
                            "宁波",
                            33
                        ],
                        [
                            "湛江",
                            33
                        ],
                        [
                            "揭阳",
                            34
                        ],
                        [
                            "荣成",
                            34
                        ],
                        [
                            "连云港",
                            35
                        ],
                        [
                            "葫芦岛",
                            35
                        ],
                        [
                            "常熟",
                            36
                        ],
                        [
                            "东莞",
                            36
                        ],
                        [
                            "河源",
                            36
                        ],
                        [
                            "淮安",
                            36
                        ],
                        [
                            "泰州",
                            36
                        ],
                        [
                            "南宁",
                            37
                        ],
                        [
                            "营口",
                            37
                        ],
                        [
                            "惠州",
                            37
                        ],
                        [
                            "江阴",
                            37
                        ],
                        [
                            "蓬莱",
                            37
                        ],
                        [
                            "韶关",
                            38
                        ],
                        [
                            "嘉峪关",
                            38
                        ],
                        [
                            "广州",
                            38
                        ],
                        [
                            "延安",
                            38
                        ],
                        [
                            "太原",
                            39
                        ],
                        [
                            "清远",
                            39
                        ],
                        [
                            "中山",
                            39
                        ],
                        [
                            "昆明",
                            39
                        ],
                        [
                            "寿光",
                            40
                        ],
                        [
                            "盘锦",
                            40
                        ],
                        [
                            "长治",
                            41
                        ],
                        [
                            "深圳",
                            41
                        ],
                        [
                            "珠海",
                            42
                        ],
                        [
                            "宿迁",
                            43
                        ],
                        [
                            "咸阳",
                            43
                        ],
                        [
                            "铜川",
                            44
                        ],
                        [
                            "平度",
                            44
                        ],
                        [
                            "佛山",
                            44
                        ],
                        [
                            "海口",
                            44
                        ],
                        [
                            "江门",
                            45
                        ],
                        [
                            "章丘",
                            45
                        ],
                        [
                            "肇庆",
                            46
                        ],
                        [
                            "大连",
                            47
                        ],
                        [
                            "临汾",
                            47
                        ],
                        [
                            "吴江",
                            47
                        ],
                        [
                            "石嘴山",
                            49
                        ],
                        [
                            "沈阳",
                            50
                        ],
                        [
                            "苏州",
                            50
                        ],
                        [
                            "茂名",
                            50
                        ],
                        [
                            "嘉兴",
                            51
                        ],
                        [
                            "长春",
                            51
                        ],
                        [
                            "胶州",
                            52
                        ],
                        [
                            "银川",
                            52
                        ],
                        [
                            "张家港",
                            52
                        ],
                        [
                            "三门峡",
                            53
                        ],
                        [
                            "锦州",
                            54
                        ],
                        [
                            "南昌",
                            54
                        ],
                        [
                            "柳州",
                            54
                        ],
                        [
                            "三亚",
                            54
                        ],
                        [
                            "自贡",
                            56
                        ],
                        [
                            "吉林",
                            56
                        ],
                        [
                            "阳江",
                            57
                        ],
                        [
                            "泸州",
                            57
                        ],
                        [
                            "西宁",
                            57
                        ],
                        [
                            "宜宾",
                            58
                        ],
                        [
                            "呼和浩特",
                            58
                        ],
                        [
                            "成都",
                            58
                        ],
                        [
                            "大同",
                            58
                        ],
                        [
                            "镇江",
                            59
                        ],
                        [
                            "桂林",
                            59
                        ],
                        [
                            "张家界",
                            59
                        ],
                        [
                            "宜兴",
                            59
                        ],
                        [
                            "北海",
                            60
                        ],
                        [
                            "西安",
                            61
                        ],
                        [
                            "金坛",
                            62
                        ],
                        [
                            "东营",
                            62
                        ],
                        [
                            "牡丹江",
                            63
                        ],
                        [
                            "遵义",
                            63
                        ],
                        [
                            "绍兴",
                            63
                        ],
                        [
                            "扬州",
                            64
                        ],
                        [
                            "常州",
                            64
                        ],
                        [
                            "潍坊",
                            65
                        ],
                        [
                            "重庆",
                            66
                        ],
                        [
                            "台州",
                            67
                        ],
                        [
                            "南京",
                            67
                        ],
                        [
                            "滨州",
                            70
                        ],
                        [
                            "贵阳",
                            71
                        ],
                        [
                            "无锡",
                            71
                        ],
                        [
                            "本溪",
                            71
                        ],
                        [
                            "克拉玛依",
                            72
                        ],
                        [
                            "渭南",
                            72
                        ],
                        [
                            "马鞍山",
                            72
                        ],
                        [
                            "宝鸡",
                            72
                        ],
                        [
                            "焦作",
                            75
                        ],
                        [
                            "句容",
                            75
                        ],
                        [
                            "北京",
                            79
                        ],
                        [
                            "徐州",
                            79
                        ],
                        [
                            "衡水",
                            80
                        ],
                        [
                            "包头",
                            80
                        ],
                        [
                            "绵阳",
                            80
                        ],
                        [
                            "乌鲁木齐",
                            84
                        ],
                        [
                            "枣庄",
                            84
                        ],
                        [
                            "杭州",
                            84
                        ],
                        [
                            "淄博",
                            85
                        ],
                        [
                            "鞍山",
                            86
                        ],
                        [
                            "溧阳",
                            86
                        ],
                        [
                            "库尔勒",
                            86
                        ],
                        [
                            "安阳",
                            90
                        ],
                        [
                            "开封",
                            90
                        ],
                        [
                            "济南",
                            92
                        ],
                        [
                            "德阳",
                            93
                        ],
                        [
                            "温州",
                            95
                        ],
                        [
                            "九江",
                            96
                        ],
                        [
                            "邯郸",
                            98
                        ],
                        [
                            "临安",
                            99
                        ],
                        [
                            "兰州",
                            99
                        ],
                        [
                            "沧州",
                            100
                        ],
                        [
                            "临沂",
                            103
                        ],
                        [
                            "南充",
                            104
                        ],
                        [
                            "天津",
                            105
                        ],
                        [
                            "富阳",
                            106
                        ],
                        [
                            "泰安",
                            112
                        ],
                        [
                            "诸暨",
                            112
                        ],
                        [
                            "郑州",
                            113
                        ],
                        [
                            "哈尔滨",
                            114
                        ],
                        [
                            "聊城",
                            116
                        ],
                        [
                            "芜湖",
                            117
                        ],
                        [
                            "唐山",
                            119
                        ],
                        [
                            "平顶山",
                            119
                        ],
                        [
                            "邢台",
                            119
                        ],
                        [
                            "德州",
                            120
                        ],
                        [
                            "济宁",
                            120
                        ],
                        [
                            "荆州",
                            127
                        ],
                        [
                            "宜昌",
                            130
                        ],
                        [
                            "义乌",
                            132
                        ],
                        [
                            "丽水",
                            133
                        ],
                        [
                            "洛阳",
                            134
                        ],
                        [
                            "秦皇岛",
                            136
                        ],
                        [
                            "株洲",
                            143
                        ],
                        [
                            "石家庄",
                            147
                        ],
                        [
                            "莱芜",
                            148
                        ],
                        [
                            "常德",
                            152
                        ],
                        [
                            "保定",
                            153
                        ],
                        [
                            "湘潭",
                            154
                        ],
                        [
                            "金华",
                            157
                        ],
                        [
                            "岳阳",
                            169
                        ],
                        [
                            "长沙",
                            175
                        ],
                        [
                            "衢州",
                            177
                        ],
                        [
                            "廊坊",
                            193
                        ],
                        [
                            "菏泽",
                            194
                        ],
                        [
                            "合肥",
                            229
                        ],
                        [
                            "武汉",
                            273
                        ],
                        [
                            "大庆",
                            279
                        ],
                        [
                            "河南省",
                            107.9
                        ],
                        [
                            "江苏省",
                            124
                        ],
                        [
                            "安徽省",
                            115
                        ],
                        [
                            "湖北省",
                            116
                        ],
                        [
                            "浙江省",
                            157
                        ],
                        [
                            "内蒙古省",
                            101.3
                        ],
                        [
                            "江西省",
                            134
                        ],
                        [
                            "湖南",
                            112
                        ],
                        [
                            "吉林省",
                            100.4
                        ],
                        [
                            "云南省",
                            134
                        ],
                        [
                            "黑龙江省",
                            115
                        ],
                        [
                            "台湾省",
                            143
                        ]
                    ],
                    "geoCoordMap": {
                        "海门": [
                            121.15,
                            31.89
                        ],
                        "鄂尔多斯": [
                            109.781327,
                            39.608266
                        ],
                        "招远": [
                            120.38,
                            37.35
                        ],
                        "舟山": [
                            122.207216,
                            29.985295
                        ],
                        "齐齐哈尔": [
                            123.97,
                            47.33
                        ],
                        "盐城": [
                            120.13,
                            33.38
                        ],
                        "赤峰": [
                            118.87,
                            42.28
                        ],
                        "青岛": [
                            120.33,
                            36.07
                        ],
                        "乳山": [
                            121.52,
                            36.89
                        ],
                        "金昌": [
                            102.188043,
                            38.520089
                        ],
                        "泉州": [
                            118.58,
                            24.93
                        ],
                        "莱西": [
                            120.53,
                            36.86
                        ],
                        "日照": [
                            119.46,
                            35.42
                        ],
                        "胶南": [
                            119.97,
                            35.88
                        ],
                        "南通": [
                            121.05,
                            32.08
                        ],
                        "拉萨": [
                            91.11,
                            29.97
                        ],
                        "云浮": [
                            112.02,
                            22.93
                        ],
                        "梅州": [
                            116.1,
                            24.55
                        ],
                        "文登": [
                            122.05,
                            37.2
                        ],
                        "上海": [
                            121.48,
                            31.22
                        ],
                        "攀枝花": [
                            101.718637,
                            26.582347
                        ],
                        "威海": [
                            122.1,
                            37.5
                        ],
                        "承德": [
                            117.93,
                            40.97
                        ],
                        "厦门": [
                            118.1,
                            24.46
                        ],
                        "汕尾": [
                            115.375279,
                            22.786211
                        ],
                        "潮州": [
                            116.63,
                            23.68
                        ],
                        "丹东": [
                            124.37,
                            40.13
                        ],
                        "太仓": [
                            121.1,
                            31.45
                        ],
                        "曲靖": [
                            103.79,
                            25.51
                        ],
                        "烟台": [
                            121.39,
                            37.52
                        ],
                        "福州": [
                            119.3,
                            26.08
                        ],
                        "瓦房店": [
                            121.979603,
                            39.627114
                        ],
                        "即墨": [
                            120.45,
                            36.38
                        ],
                        "抚顺": [
                            123.97,
                            41.97
                        ],
                        "玉溪": [
                            102.52,
                            24.35
                        ],
                        "张家口": [
                            114.87,
                            40.82
                        ],
                        "阳泉": [
                            113.57,
                            37.85
                        ],
                        "莱州": [
                            119.942327,
                            37.177017
                        ],
                        "湖州": [
                            120.1,
                            30.86
                        ],
                        "汕头": [
                            116.69,
                            23.39
                        ],
                        "昆山": [
                            120.95,
                            31.39
                        ],
                        "宁波": [
                            121.56,
                            29.86
                        ],
                        "湛江": [
                            110.359377,
                            21.270708
                        ],
                        "揭阳": [
                            116.35,
                            23.55
                        ],
                        "荣成": [
                            122.41,
                            37.16
                        ],
                        "连云港": [
                            119.16,
                            34.59
                        ],
                        "葫芦岛": [
                            120.836932,
                            40.711052
                        ],
                        "常熟": [
                            120.74,
                            31.64
                        ],
                        "东莞": [
                            113.75,
                            23.04
                        ],
                        "河源": [
                            114.68,
                            23.73
                        ],
                        "淮安": [
                            119.15,
                            33.5
                        ],
                        "泰州": [
                            119.9,
                            32.49
                        ],
                        "南宁": [
                            108.33,
                            22.84
                        ],
                        "营口": [
                            122.18,
                            40.65
                        ],
                        "惠州": [
                            114.4,
                            23.09
                        ],
                        "江阴": [
                            120.26,
                            31.91
                        ],
                        "蓬莱": [
                            120.75,
                            37.8
                        ],
                        "韶关": [
                            113.62,
                            24.84
                        ],
                        "嘉峪关": [
                            98.289152,
                            39.77313
                        ],
                        "广州": [
                            113.23,
                            23.16
                        ],
                        "延安": [
                            109.47,
                            36.6
                        ],
                        "太原": [
                            112.53,
                            37.87
                        ],
                        "清远": [
                            113.01,
                            23.7
                        ],
                        "中山": [
                            113.38,
                            22.52
                        ],
                        "昆明": [
                            102.73,
                            25.04
                        ],
                        "寿光": [
                            118.73,
                            36.86
                        ],
                        "盘锦": [
                            122.070714,
                            41.119997
                        ],
                        "长治": [
                            113.08,
                            36.18
                        ],
                        "深圳": [
                            114.07,
                            22.62
                        ],
                        "珠海": [
                            113.52,
                            22.3
                        ],
                        "宿迁": [
                            118.3,
                            33.96
                        ],
                        "咸阳": [
                            108.72,
                            34.36
                        ],
                        "铜川": [
                            109.11,
                            35.09
                        ],
                        "平度": [
                            119.97,
                            36.77
                        ],
                        "佛山": [
                            113.11,
                            23.05
                        ],
                        "海口": [
                            110.35,
                            20.02
                        ],
                        "江门": [
                            113.06,
                            22.61
                        ],
                        "章丘": [
                            117.53,
                            36.72
                        ],
                        "肇庆": [
                            112.44,
                            23.05
                        ],
                        "大连": [
                            121.62,
                            38.92
                        ],
                        "临汾": [
                            111.5,
                            36.08
                        ],
                        "吴江": [
                            120.63,
                            31.16
                        ],
                        "石嘴山": [
                            106.39,
                            39.04
                        ],
                        "沈阳": [
                            123.38,
                            41.8
                        ],
                        "苏州": [
                            120.62,
                            31.32
                        ],
                        "茂名": [
                            110.88,
                            21.68
                        ],
                        "嘉兴": [
                            120.76,
                            30.77
                        ],
                        "长春": [
                            125.35,
                            43.88
                        ],
                        "胶州": [
                            120.03336,
                            36.264622
                        ],
                        "银川": [
                            106.27,
                            38.47
                        ],
                        "张家港": [
                            120.555821,
                            31.875428
                        ],
                        "三门峡": [
                            111.19,
                            34.76
                        ],
                        "锦州": [
                            121.15,
                            41.13
                        ],
                        "南昌": [
                            115.89,
                            28.68
                        ],
                        "柳州": [
                            109.4,
                            24.33
                        ],
                        "三亚": [
                            109.511909,
                            18.252847
                        ],
                        "自贡": [
                            104.778442,
                            29.33903
                        ],
                        "吉林": [
                            126.57,
                            43.87
                        ],
                        "阳江": [
                            111.95,
                            21.85
                        ],
                        "泸州": [
                            105.39,
                            28.91
                        ],
                        "西宁": [
                            101.74,
                            36.56
                        ],
                        "宜宾": [
                            104.56,
                            29.77
                        ],
                        "呼和浩特": [
                            111.65,
                            40.82
                        ],
                        "成都": [
                            104.06,
                            30.67
                        ],
                        "大同": [
                            113.3,
                            40.12
                        ],
                        "镇江": [
                            119.44,
                            32.2
                        ],
                        "桂林": [
                            110.28,
                            25.29
                        ],
                        "张家界": [
                            110.479191,
                            29.117096
                        ],
                        "宜兴": [
                            119.82,
                            31.36
                        ],
                        "北海": [
                            109.12,
                            21.49
                        ],
                        "西安": [
                            108.95,
                            34.27
                        ],
                        "金坛": [
                            119.56,
                            31.74
                        ],
                        "东营": [
                            118.49,
                            37.46
                        ],
                        "牡丹江": [
                            129.58,
                            44.6
                        ],
                        "遵义": [
                            106.9,
                            27.7
                        ],
                        "绍兴": [
                            120.58,
                            30.01
                        ],
                        "扬州": [
                            119.42,
                            32.39
                        ],
                        "常州": [
                            119.95,
                            31.79
                        ],
                        "潍坊": [
                            119.1,
                            36.62
                        ],
                        "重庆": [
                            106.54,
                            29.59
                        ],
                        "台州": [
                            121.420757,
                            28.656386
                        ],
                        "南京": [
                            118.78,
                            32.04
                        ],
                        "滨州": [
                            118.03,
                            37.36
                        ],
                        "贵阳": [
                            106.71,
                            26.57
                        ],
                        "无锡": [
                            120.29,
                            31.59
                        ],
                        "本溪": [
                            123.73,
                            41.3
                        ],
                        "克拉玛依": [
                            84.77,
                            45.59
                        ],
                        "渭南": [
                            109.5,
                            34.52
                        ],
                        "马鞍山": [
                            118.48,
                            31.56
                        ],
                        "宝鸡": [
                            107.15,
                            34.38
                        ],
                        "焦作": [
                            113.21,
                            35.24
                        ],
                        "句容": [
                            119.16,
                            31.95
                        ],
                        "北京": [
                            116.46,
                            39.92
                        ],
                        "徐州": [
                            117.2,
                            34.26
                        ],
                        "衡水": [
                            115.72,
                            37.72
                        ],
                        "包头": [
                            110,
                            40.58
                        ],
                        "绵阳": [
                            104.73,
                            31.48
                        ],
                        "乌鲁木齐": [
                            87.68,
                            43.77
                        ],
                        "枣庄": [
                            117.57,
                            34.86
                        ],
                        "杭州": [
                            120.19,
                            30.26
                        ],
                        "淄博": [
                            118.05,
                            36.78
                        ],
                        "鞍山": [
                            122.85,
                            41.12
                        ],
                        "溧阳": [
                            119.48,
                            31.43
                        ],
                        "库尔勒": [
                            86.06,
                            41.68
                        ],
                        "安阳": [
                            114.35,
                            36.1
                        ],
                        "开封": [
                            114.35,
                            34.79
                        ],
                        "济南": [
                            117,
                            36.65
                        ],
                        "德阳": [
                            104.37,
                            31.13
                        ],
                        "温州": [
                            120.65,
                            28.01
                        ],
                        "九江": [
                            115.97,
                            29.71
                        ],
                        "邯郸": [
                            114.47,
                            36.6
                        ],
                        "临安": [
                            119.72,
                            30.23
                        ],
                        "兰州": [
                            103.73,
                            36.03
                        ],
                        "沧州": [
                            116.83,
                            38.33
                        ],
                        "临沂": [
                            118.35,
                            35.05
                        ],
                        "南充": [
                            106.110698,
                            30.837793
                        ],
                        "天津": [
                            117.2,
                            39.13
                        ],
                        "富阳": [
                            119.95,
                            30.07
                        ],
                        "泰安": [
                            117.13,
                            36.18
                        ],
                        "诸暨": [
                            120.23,
                            29.71
                        ],
                        "郑州": [
                            113.65,
                            34.76
                        ],
                        "哈尔滨": [
                            126.63,
                            45.75
                        ],
                        "聊城": [
                            115.97,
                            36.45
                        ],
                        "芜湖": [
                            118.38,
                            31.33
                        ],
                        "唐山": [
                            118.02,
                            39.63
                        ],
                        "平顶山": [
                            113.29,
                            33.75
                        ],
                        "邢台": [
                            114.48,
                            37.05
                        ],
                        "德州": [
                            116.29,
                            37.45
                        ],
                        "济宁": [
                            116.59,
                            35.38
                        ],
                        "荆州": [
                            112.239741,
                            30.335165
                        ],
                        "宜昌": [
                            111.3,
                            30.7
                        ],
                        "义乌": [
                            120.06,
                            29.32
                        ],
                        "丽水": [
                            119.92,
                            28.45
                        ],
                        "洛阳": [
                            112.44,
                            34.7
                        ],
                        "秦皇岛": [
                            119.57,
                            39.95
                        ],
                        "株洲": [
                            113.16,
                            27.83
                        ],
                        "石家庄": [
                            114.48,
                            38.03
                        ],
                        "莱芜": [
                            117.67,
                            36.19
                        ],
                        "常德": [
                            111.69,
                            29.05
                        ],
                        "保定": [
                            115.48,
                            38.85
                        ],
                        "湘潭": [
                            112.91,
                            27.87
                        ],
                        "金华": [
                            119.64,
                            29.12
                        ],
                        "岳阳": [
                            113.09,
                            29.37
                        ],
                        "长沙": [
                            113,
                            28.21
                        ],
                        "衢州": [
                            118.88,
                            28.97
                        ],
                        "廊坊": [
                            116.7,
                            39.53
                        ],
                        "菏泽": [
                            115.480656,
                            35.23375
                        ],
                        "合肥": [
                            117.27,
                            31.86
                        ],
                        "武汉": [
                            114.31,
                            30.52
                        ],
                        "大庆": [
                            125.03,
                            46.58
                        ]
                    },
                    "dataType": 0,
                    "option": {
                        "borderWidth": 1,
                        "scale": 87,
                        "type": 0,
                        "mapSerieType": "map",
                        "borderColor": "#0dffff",
                        "areaColor": "#061d33",
                        "banner": true,
                        "bannerTime": 3000,
                        "fontSize": 14,
                        "zoom": 0.5,
                        "barColor": [],
                        "empAreaColor": "rgba(35, 183, 229, 0.42)",
                        "empColor": "#fff",
                        "index": "894edc1d-d2f0-4616-962c-8e61083ada71",
                        "mapData": "static/GeoJSON/100000_full.json",
                        "color": "rgba(13, 255, 255, 1)"
                    },
                    "content": "//console.info(option)"
                },
                {
                    "type": "测试通用",
                    "label": "测试通用图",
                    "h": 4,
                    "span": 6,
                    "component": "echarts",
                    "gridName": "_random_",
                    "icon": "",
                    "style": {
                        "height": "100%"
                    },
                    "color": "#fff",
                    "display": true,
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "content": "const updateFrequency = 2000;\nconst dimension = 0;\nconst countryColors = {\n  Australia: '#00008b',\n  Canada: '#f00',\n  China: '#ffde00',\n  Cuba: '#002a8f',\n  Finland: '#003580',\n  France: '#ed2939',\n  Germany: '#000',\n  Iceland: '#003897',\n  India: '#f93',\n  Japan: '#bc002d',\n  'North Korea': '#024fa2',\n  'South Korea': '#000',\n  'New Zealand': '#00247d',\n  Norway: '#ef2b2d',\n  Poland: '#dc143c',\n  Russia: '#d52b1e',\n  Turkey: '#e30a17',\n  'United Kingdom': '#00247d',\n  'United States': '#b22234'\n};\n$.when(\n  $.getJSON('https://cdn.jsdelivr.net/npm/emoji-flags@1.3.0/data.json'),\n  $.getJSON('https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/examples/data/asset/data/life-expectancy-table.json')\n).done(function (res0, res1) {\n  const flags = res0[0];\n  const data = res1[0];\n  const years = [];\n  for (let i = 0; i < data.length; ++i) {\n    if (years.length === 0 || years[years.length - 1] !== data[i][4]) {\n      years.push(data[i][4]);\n    }\n  }\n  function getFlag(countryName) {\n    if (!countryName) {\n      return '';\n    }\n    return (\n      flags.find(function (item) {\n        return item.name === countryName;\n      }) || {}\n    ).emoji;\n  }\n  let startIndex = 10;\n  let startYear = years[startIndex];\n  option = {\n    grid: {\n      top: 10,\n      bottom: 30,\n      left: 150,\n      right: 80\n    },\n    xAxis: {\n      max: 'dataMax',\n      axisLabel: {\n        formatter: function (n) {\n          return Math.round(n) + '';\n        }\n      }\n    },\n    dataset: {\n      source: data.slice(1).filter(function (d) {\n        return d[4] === startYear;\n      })\n    },\n    yAxis: {\n      type: 'category',\n      inverse: true,\n      max: 10,\n      axisLabel: {\n        show: true,\n        fontSize: 14,\n        formatter: function (value) {\n          return value + '{flag|' + getFlag(value) + '}';\n        },\n        rich: {\n          flag: {\n            fontSize: 25,\n            padding: 5\n          }\n        }\n      },\n      animationDuration: 300,\n      animationDurationUpdate: 300\n    },\n    series: [\n      {\n        realtimeSort: true,\n        seriesLayoutBy: 'column',\n        type: 'bar',\n        itemStyle: {\n          color: function (param) {\n            return countryColors[param.value[3]] || '#5470c6';\n          }\n        },\n        encode: {\n          x: dimension,\n          y: 3\n        },\n        label: {\n          show: true,\n          precision: 1,\n          position: 'right',\n          valueAnimation: true,\n          fontFamily: 'monospace'\n        }\n      }\n    ],\n    // Disable init animation.\n    animationDuration: 0,\n    animationDurationUpdate: updateFrequency,\n    animationEasing: 'linear',\n    animationEasingUpdate: 'linear',\n    graphic: {\n      elements: [\n        {\n          type: 'text',\n          right: 160,\n          bottom: 60,\n          style: {\n            text: startYear,\n            font: 'bolder 80px monospace',\n            fill: 'rgba(100, 100, 100, 0.25)'\n          },\n          z: 100\n        }\n      ]\n    }\n  };\n  // console.log(option);\n  myChart.setOption(option);\n  for (let i = startIndex; i < years.length - 1; ++i) {\n    (function (i) {\n      setTimeout(function () {\n        updateYear(years[i + 1]);\n      }, (i - startIndex) * updateFrequency);\n    })(i);\n  }\n  function updateYear(year) {\n    let source = data.slice(1).filter(function (d) {\n      return d[4] === year;\n    });\n    option.series[0].data = source;\n    option.graphic.elements[0].style.text = year;\n    myChart.setOption(option);\n  }\n});",
                    "option": {
                        "vaildProp": [
                            "titleList"
                        ]
                    }
                },
                {
                    "type": "香港echart",
                    "label": "香港18区人口密度",
                    "h": 4,
                    "span": 6,
                    "component": "echarts",
                    "gridName": "_random_",
                    "icon": "",
                    "style": {
                        "height": "100%"
                    },
                    "color": "#fff",
                    "display": true,
                    "fresh_ds": [],
                    "fresh_params": [],
                    "fields": [],
                    "datasource": "示例",
                    "data": [],
                    "content": "let ROOT_PATH='https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/examples'\nmyChart.showLoading();\n$.get(ROOT_PATH + '/data/asset/geo/HK.json', function (geoJson) {\n  myChart.hideLoading();\n  echarts.registerMap('HK', geoJson);\n  myChart.setOption(\n    (option = {\n      title: {\n        text: 'Population Density of Hong Kong （2011）',\n        subtext: 'Data from Wikipedia',\n        sublink:\n          'http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{b}<br/>{c} (p / km2)'\n      },\n      toolbox: {\n        show: true,\n        orient: 'vertical',\n        left: 'right',\n        top: 'center',\n        feature: {\n          dataView: { readOnly: false },\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      visualMap: {\n        min: 800,\n        max: 50000,\n        text: ['High', 'Low'],\n        realtime: false,\n        calculable: true,\n        inRange: {\n          color: ['lightskyblue', 'yellow', 'orangered']\n        }\n      }, dataset:{\n          source:[\n\t\t\t\t[\"地市\",\"value\"],\n            ['中西区', 20057.34],\n            ['湾仔', 15477.48],\n            ['东区', 31686.1],\n            ['南区', 6992.6],\n            ['油尖旺', 44045.49],\n            ['深水埗', 40689.64],\n            ['九龙城', 37659.78],\n            ['黄大仙', 45180.97],\n            ['观塘', 55204.26],\n            ['葵青', 21900.9],\n            ['荃湾', 4918.26],\n            ['屯门', 5881.84],\n            ['元朗', 4178.01],\n            ['北区', 2227.92],\n            ['大埔', 2180.98],\n            ['沙田', 9172.94],\n            ['西贡', 3368],\n            ['离岛', 806.9]\n          ] \n        },\n      series: [\n        {\n          name: '香港18区人口密度',\n          type: 'map',\n          map: 'HK',\n          label: {\n            show: true\n          },\n          // 自定义名称映射\n          nameMap: {\n            'Central and Western': '中西区',\n            Eastern: '东区',\n            Islands: '离岛',\n            'Kowloon City': '九龙城',\n            'Kwai Tsing': '葵青',\n            'Kwun Tong': '观塘',\n            North: '北区',\n            'Sai Kung': '西贡',\n            'Sha Tin': '沙田',\n            'Sham Shui Po': '深水埗',\n            Southern: '南区',\n            'Tai Po': '大埔',\n            'Tsuen Wan': '荃湾',\n            'Tuen Mun': '屯门',\n            'Wan Chai': '湾仔',\n            'Wong Tai Sin': '黄大仙',\n            'Yau Tsim Mong': '油尖旺',\n            'Yuen Long': '元朗'\n          }\n        }\n      ]\n    })\n  );\n});",
                    "option": {
                        "vaildProp": [
                            "titleList"
                        ]
                    }
                }
            ]
        },
        {
            "title": "新分类",
            "list": [
                {
                    "type": "表格斜线",
                    "label": "表格斜线",
                    "h": 4,
                    "span": 6,
                    "component": "dync-template",
                    "gridName": "_random_",
                    "icon": "",
                    "style": {
                        "height": "100%"
                    },
                    "color": "#fff",
                    "display": true,
                    "content": "<div style=\"width:100%;height:100%;\" >\n  <table>\n<tr>\n<th>姓名</th>\n<th>年龄</th>\n<th>性别</th>\n</tr>\n<tr>\n<td class=\"first\"></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</table>\n  </div>\n\n<style>\ntable{\nborder-collapse:collapse;\n}\ntable,tr,td{\nborder:1px solid black;\n}\ntd{\nwidth:100px;/*这里需要自己调整，根据自己的需求调整宽度*/\nheight:50px;/*这里需要自己调整，根据自己的需求调整高度*/\nposition: relative;\n}\n\ntd[class=first]:before{\ncontent: \"\";\nposition: absolute;\nwidth: 1px;\nheight:114px;/*这里需要自己调整，根据td的宽度和高度*/\ntop:0;\nleft:0;\nbackground-color: black;\ndisplay: block;\ntransform: rotate(-63deg);/*这里需要自己调整，根据线的位置*/\ntransform-origin: top;\n}\n</style>"
                },
                {
                    "type": "跑马灯",
                    "label": "跑马灯",
                    "h": 4,
                    "span": 6,
                    "component": "dync-template",
                    "gridName": "_random_",
                    "icon": "",
                    "style": {
                        "height": "100%"
                    },
                    "color": "#fff",
                    "display": true,
                    "content": " <div>\n <input type=\"button\" value=\"嗨起来\" @click=\"bejin\">\n <input type=\"button\" value=\"停下\" @click=\"stop\">\n <h4>{{msg}}</h4>\n </div>\n\n<script>\n  return {\n    \n  data:{\n     msg:'嗨起来，跑马灯~~',\n     intervalId:null\n   },\n   methods:{\n     bejin(){\n       if(this.intervalId!=null) return\n       //箭头解决this指向问题，由内部的指向外部\n       this.intervalId=setInterval(()=>{\n         //获取到头的第一个字符\n         var start=this.msg.substring(0,1)\n         //获取到后面的所有字符\n         var end=this.msg.substring(1)\n         //重新拼接得到新的字符串，并赋值给this.msg\n         this.msg=end+start\n         //注意：vm实例，会监听自己身上data中所有数据的改变，只要数据一发生变化，就会把最新数据，从data上同步到页面中去\n        },200)\n     },\n     stop(){//停止计时器\n       clearInterval(this.intervalId)\n       //每当清除了定时器后，需要重新把intervalId置为null\n       this.intervalId=null;\n     }\n   }      \n  }\n   \n</script>   "
                }
            ]
        }
    ]
}